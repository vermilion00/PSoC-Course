ARM GAS  C:\Users\z004e6he\AppData\Local\Temp\ccc7qWF9.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	gADC_ISR
  20              		.bss
  21              		.type	gADC_ISR, %object
  22              		.size	gADC_ISR, 1
  23              	gADC_ISR:
  24 0000 00       		.space	1
  25              		.section	.rodata
  26              		.align	2
  27              	.LC0:
  28 0000 434F4D20 		.ascii	"COM Port Open\015\012\000"
  28      506F7274 
  28      204F7065 
  28      6E0D0A00 
  29              		.align	2
  30              	.LC1:
  31 0010 7B0D0A09 		.ascii	"{\015\012\011\"Avg ADC Value\": \"%1u mV\",\015\012"
  31      22417667 
  31      20414443 
  31      2056616C 
  31      7565223A 
  32 0030 00       		.ascii	"\000"
  33 0031 000000   		.align	2
  34              	.LC2:
  35 0034 09225465 		.ascii	"\011\"Temperature (Int)\": \"%i.%i C\"\015\012}\015"
  35      6D706572 
  35      61747572 
  35      65202849 
  35      6E742922 
  36 0057 0A00     		.ascii	"\012\000"
  37 0059 000000   		.align	2
  38              	.LC3:
  39 005c 53616D70 		.ascii	"Sample: %lu mV\015\012\000"
  39      6C653A20 
  39      256C7520 
  39      6D560D0A 
  39      00
  40 006d 000000   		.align	2
  41              	.LC4:
  42 0070 456D756C 		.ascii	"Emulated Data: %x \015\012\000"
ARM GAS  C:\Users\z004e6he\AppData\Local\Temp\ccc7qWF9.s 			page 2


  42      61746564 
  42      20446174 
  42      613A2025 
  42      78200D0A 
  43              		.section	.text.main,"ax",%progbits
  44              		.align	2
  45              		.global	main
  46              		.thumb
  47              		.thumb_func
  48              		.type	main, %function
  49              	main:
  50              	.LFB64:
  51              		.file 1 "main.c"
   1:main.c        **** /*
   2:main.c        **** * ===============================================================================
   3:main.c        **** *
   4:main.c        **** * Names: Luca Spengler (1399655), Fabian Fritz (1394906)
   5:main.c        **** * Emails: luca.spengler2@stud.fra-uas.de, fabian.fritz@stud.fra-uas.de
   6:main.c        **** * Date: 10.04.2024
   7:main.c        **** * Course ID: TX00DB04
   8:main.c        **** * Description: This program reads the analog output of a temperature sensor and
   9:main.c        **** *              outputs the average of the results over a period of 1 second
  10:main.c        **** *              in mV and °C over UART in the JSON format.
  11:main.c        **** *
  12:main.c        **** * ===============================================================================
  13:main.c        **** *
  14:main.c        **** *
  15:main.c        **** *******************************************************************************
  16:main.c        **** * Copyright (2018-2020), Cypress Semiconductor Corporation. All rights reserved.
  17:main.c        **** *******************************************************************************
  18:main.c        **** * This software, including source code, documentation and related materials
  19:main.c        **** * (“Software”), is owned by Cypress Semiconductor Corporation or one of its
  20:main.c        **** * subsidiaries (“Cypress”) and is protected by and subject to worldwide patent
  21:main.c        **** * protection (United States and foreign), United States copyright laws and
  22:main.c        **** * international treaty provisions. Therefore, you may use this Software only
  23:main.c        **** * as provided in the license agreement accompanying the software package from
  24:main.c        **** * which you obtained this Software (“EULA”).
  25:main.c        **** *
  26:main.c        **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  27:main.c        **** * non-transferable license to copy, modify, and compile the Software source
  28:main.c        **** * code solely for use in connection with Cypress’s integrated circuit products.
  29:main.c        **** * Any reproduction, modification, translation, compilation, or representation
  30:main.c        **** * of this Software except as specified above is prohibited without the express
  31:main.c        **** * written permission of Cypress.
  32:main.c        **** *
  33:main.c        **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO WARRANTY OF ANY KIND, 
  34:main.c        **** * EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED 
  35:main.c        **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. Cypress 
  36:main.c        **** * reserves the right to make changes to the Software without notice. Cypress 
  37:main.c        **** * does not assume any liability arising out of the application or use of the 
  38:main.c        **** * Software or any product or circuit described in the Software. Cypress does 
  39:main.c        **** * not authorize its products for use in any products where a malfunction or 
  40:main.c        **** * failure of the Cypress product may reasonably be expected to result in 
  41:main.c        **** * significant property damage, injury or death (“High Risk Product”). By 
  42:main.c        **** * including Cypress’s product in a High Risk Product, the manufacturer of such 
  43:main.c        **** * system or application assumes all risk of such use and in doing so agrees to 
  44:main.c        **** * indemnify Cypress against all liability.
ARM GAS  C:\Users\z004e6he\AppData\Local\Temp\ccc7qWF9.s 			page 3


  45:main.c        **** *******************************************************************************/
  46:main.c        **** 
  47:main.c        **** #include <project.h>
  48:main.c        **** #include "stdio.h"
  49:main.c        **** #include <stdlib.h>
  50:main.c        **** 
  51:main.c        **** /* Project Defines */
  52:main.c        **** #define FALSE  0
  53:main.c        **** #define TRUE   1
  54:main.c        **** #define TRANSMIT_BUFFER_SIZE  64
  55:main.c        **** #define SAMPLE_RATE 10000   //10000 Samples per second
  56:main.c        **** #define CONVERSION_RATE 10 //10 mV per 1°C
  57:main.c        **** #define TEN_CONSTANT 10 //Constant for modulo operation
  58:main.c        **** 
  59:main.c        **** volatile uint8 gADC_ISR = FALSE;    //ADC ISR flag
  60:main.c        **** 
  61:main.c        **** 
  62:main.c        **** /*******************************************************************************
  63:main.c        **** * Function Name: main
  64:main.c        **** ********************************************************************************
  65:main.c        **** *
  66:main.c        **** * Summary:
  67:main.c        **** *  main() performs following functions:
  68:main.c        **** *  1: Starts the ADC and UART components.
  69:main.c        **** *  2: Checks for ADC end of conversion.  Stores latest result in output
  70:main.c        **** *     if conversion complete.
  71:main.c        **** *  3: Checks for UART input.
  72:main.c        **** *     On 'C' or 'c' received: transmits the last sample via the UART.
  73:main.c        **** *     On 'S' or 's' received: continuously transmits samples as they are completed.
  74:main.c        **** *     On 'X' or 'x' received: stops continuously transmitting samples.
  75:main.c        **** *     On 'E' or 'e' received: transmits a dummy byte of data.
  76:main.c        **** *
  77:main.c        **** * Parameters:
  78:main.c        **** *  None.
  79:main.c        **** *
  80:main.c        **** * Return:
  81:main.c        **** *  None.
  82:main.c        **** *
  83:main.c        **** *******************************************************************************/
  84:main.c        **** int main()
  85:main.c        **** {
  52              		.loc 1 85 0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 88
  55              		@ frame_needed = 1, uses_anonymous_args = 0
  56 0000 90B5     		push	{r4, r7, lr}
  57              		.cfi_def_cfa_offset 12
  58              		.cfi_offset 4, -12
  59              		.cfi_offset 7, -8
  60              		.cfi_offset 14, -4
  61 0002 97B0     		sub	sp, sp, #92
  62              		.cfi_def_cfa_offset 104
  63 0004 00AF     		add	r7, sp, #0
  64              		.cfi_def_cfa_register 7
  86:main.c        ****     /* Variable to store ADC result */
  87:main.c        ****     uint32 Output;
  88:main.c        ****     /* Variable to store UART received character */
ARM GAS  C:\Users\z004e6he\AppData\Local\Temp\ccc7qWF9.s 			page 4


  89:main.c        ****     uint8 Ch;
  90:main.c        ****     /* Variable used to send emulated data */
  91:main.c        ****     uint8 EmulatedData;
  92:main.c        ****     /* Flags used to store transmit data commands */
  93:main.c        ****     uint8 ContinuouslySendData;
  94:main.c        ****     uint8 SendSingleByte;
  95:main.c        ****     uint8 SendEmulatedData;
  96:main.c        ****     /* Transmit Buffer */
  97:main.c        ****     char TransmitBuffer[TRANSMIT_BUFFER_SIZE];
  98:main.c        ****     
  99:main.c        ****     /* Start the components */
 100:main.c        ****     ADC_DelSig_1_Start();
  65              		.loc 1 100 0
  66 0006 FFF7FEFF 		bl	ADC_DelSig_1_Start
 101:main.c        ****     UART_1_Start();
  67              		.loc 1 101 0
  68 000a FFF7FEFF 		bl	UART_1_Start
 102:main.c        ****     
 103:main.c        ****     /* Initialize Variables */
 104:main.c        ****     ContinuouslySendData = FALSE;
  69              		.loc 1 104 0
  70 000e 0023     		movs	r3, #0
  71 0010 87F85630 		strb	r3, [r7, #86]
 105:main.c        ****     SendSingleByte = FALSE;
  72              		.loc 1 105 0
  73 0014 0023     		movs	r3, #0
  74 0016 87F85530 		strb	r3, [r7, #85]
 106:main.c        ****     SendEmulatedData = FALSE;
  75              		.loc 1 106 0
  76 001a 0023     		movs	r3, #0
  77 001c 87F85430 		strb	r3, [r7, #84]
 107:main.c        ****     EmulatedData = 0;
  78              		.loc 1 107 0
  79 0020 0023     		movs	r3, #0
  80 0022 87F85730 		strb	r3, [r7, #87]
 108:main.c        ****     
 109:main.c        ****     /* Start the ADC conversion */
 110:main.c        ****     ADC_DelSig_1_StartConvert();
  81              		.loc 1 110 0
  82 0026 FFF7FEFF 		bl	ADC_DelSig_1_StartConvert
 111:main.c        ****     
 112:main.c        ****     /* Send message to verify COM port is connected properly */
 113:main.c        ****     UART_1_PutString("COM Port Open\r\n");
  83              		.loc 1 113 0
  84 002a 6848     		ldr	r0, .L18
  85 002c FFF7FEFF 		bl	UART_1_PutString
 114:main.c        ****     
 115:main.c        ****     CyGlobalIntEnable;
  86              		.loc 1 115 0
  87              		.syntax unified
  88              	@ 115 "main.c" 1
  89 0030 62B6     		CPSIE   i
  90              	@ 0 "" 2
 116:main.c        ****     
 117:main.c        ****     uint16 sample_count = 0; //Counts the amount of samples
  91              		.loc 1 117 0
  92              		.thumb
ARM GAS  C:\Users\z004e6he\AppData\Local\Temp\ccc7qWF9.s 			page 5


  93              		.syntax unified
  94 0032 0023     		movs	r3, #0
  95 0034 A7F85230 		strh	r3, [r7, #82]	@ movhi
 118:main.c        ****     uint32 sample_sum = 0; //Stores the sum of the sample values
  96              		.loc 1 118 0
  97 0038 0023     		movs	r3, #0
  98 003a FB64     		str	r3, [r7, #76]
 119:main.c        ****     uint16 average_value = 0; //Stores the average value of the sample value sum
  99              		.loc 1 119 0
 100 003c 0023     		movs	r3, #0
 101 003e A7F84A30 		strh	r3, [r7, #74]	@ movhi
 102              	.L16:
 120:main.c        ****     
 121:main.c        ****     for(;;)
 122:main.c        ****     {        
 123:main.c        ****         /* Non-blocking call to get the latest data recieved  */
 124:main.c        ****         Ch = UART_1_GetChar();
 103              		.loc 1 124 0
 104 0042 FFF7FEFF 		bl	UART_1_GetChar
 105 0046 0346     		mov	r3, r0
 106 0048 87F84930 		strb	r3, [r7, #73]
 125:main.c        ****         
 126:main.c        ****         /* Set flags based on UART command */
 127:main.c        ****         switch(Ch)
 107              		.loc 1 127 0
 108 004c 97F84930 		ldrb	r3, [r7, #73]	@ zero_extendqisi2
 109 0050 582B     		cmp	r3, #88
 110 0052 21D0     		beq	.L3
 111 0054 582B     		cmp	r3, #88
 112 0056 0BDC     		bgt	.L4
 113 0058 432B     		cmp	r3, #67
 114 005a 15D0     		beq	.L5
 115 005c 432B     		cmp	r3, #67
 116 005e 02DC     		bgt	.L6
 117 0060 002B     		cmp	r3, #0
 118 0062 21D0     		beq	.L17
 128:main.c        ****         {
 129:main.c        ****             case 0:
 130:main.c        ****                 /* No new data was recieved */
 131:main.c        ****                 break;
 132:main.c        ****             case 'C':
 133:main.c        ****             case 'c':
 134:main.c        ****                 SendSingleByte = TRUE;
 135:main.c        ****                 break;
 136:main.c        ****             case 'S':
 137:main.c        ****             case 's':
 138:main.c        ****                 ContinuouslySendData = TRUE;
 139:main.c        ****                 break;
 140:main.c        ****             case 'X':
 141:main.c        ****             case 'x':
 142:main.c        ****                 ContinuouslySendData = FALSE;
 143:main.c        ****                 break;
 144:main.c        ****             case 'E':
 145:main.c        ****             case 'e':
 146:main.c        ****                 SendEmulatedData = TRUE;
 147:main.c        ****                 break;
 148:main.c        ****             default:
ARM GAS  C:\Users\z004e6he\AppData\Local\Temp\ccc7qWF9.s 			page 6


 149:main.c        ****                 /* Place error handling code here */
 150:main.c        ****                 break;    
 119              		.loc 1 150 0
 120 0064 21E0     		b	.L11
 121              	.L6:
 127:main.c        ****         {
 122              		.loc 1 127 0
 123 0066 452B     		cmp	r3, #69
 124 0068 1AD0     		beq	.L8
 125 006a 532B     		cmp	r3, #83
 126 006c 10D0     		beq	.L9
 127              		.loc 1 150 0
 128 006e 1CE0     		b	.L11
 129              	.L4:
 127:main.c        ****         {
 130              		.loc 1 127 0
 131 0070 652B     		cmp	r3, #101
 132 0072 15D0     		beq	.L8
 133 0074 652B     		cmp	r3, #101
 134 0076 02DC     		bgt	.L10
 135 0078 632B     		cmp	r3, #99
 136 007a 05D0     		beq	.L5
 137              		.loc 1 150 0
 138 007c 15E0     		b	.L11
 139              	.L10:
 127:main.c        ****         {
 140              		.loc 1 127 0
 141 007e 732B     		cmp	r3, #115
 142 0080 06D0     		beq	.L9
 143 0082 782B     		cmp	r3, #120
 144 0084 08D0     		beq	.L3
 145              		.loc 1 150 0
 146 0086 10E0     		b	.L11
 147              	.L5:
 134:main.c        ****                 break;
 148              		.loc 1 134 0
 149 0088 0123     		movs	r3, #1
 150 008a 87F85530 		strb	r3, [r7, #85]
 135:main.c        ****             case 'S':
 151              		.loc 1 135 0
 152 008e 0CE0     		b	.L11
 153              	.L9:
 138:main.c        ****                 break;
 154              		.loc 1 138 0
 155 0090 0123     		movs	r3, #1
 156 0092 87F85630 		strb	r3, [r7, #86]
 139:main.c        ****             case 'X':
 157              		.loc 1 139 0
 158 0096 08E0     		b	.L11
 159              	.L3:
 142:main.c        ****                 break;
 160              		.loc 1 142 0
 161 0098 0023     		movs	r3, #0
 162 009a 87F85630 		strb	r3, [r7, #86]
 143:main.c        ****             case 'E':
 163              		.loc 1 143 0
 164 009e 04E0     		b	.L11
ARM GAS  C:\Users\z004e6he\AppData\Local\Temp\ccc7qWF9.s 			page 7


 165              	.L8:
 146:main.c        ****                 break;
 166              		.loc 1 146 0
 167 00a0 0123     		movs	r3, #1
 168 00a2 87F85430 		strb	r3, [r7, #84]
 147:main.c        ****             default:
 169              		.loc 1 147 0
 170 00a6 00E0     		b	.L11
 171              	.L17:
 131:main.c        ****             case 'C':
 172              		.loc 1 131 0
 173 00a8 00BF     		nop
 174              	.L11:
 151:main.c        ****         }
 152:main.c        ****         
 153:main.c        ****         /*Counting and conversion logic*/
 154:main.c        ****         if(gADC_ISR){   //Check if the ADC ISR flag is set
 175              		.loc 1 154 0
 176 00aa 494B     		ldr	r3, .L18+4
 177 00ac 1B78     		ldrb	r3, [r3]
 178 00ae DBB2     		uxtb	r3, r3
 179 00b0 002B     		cmp	r3, #0
 180 00b2 4CD0     		beq	.L12
 155:main.c        ****             gADC_ISR = FALSE;   //Reset the ISR flag
 181              		.loc 1 155 0
 182 00b4 464B     		ldr	r3, .L18+4
 183 00b6 0022     		movs	r2, #0
 184 00b8 1A70     		strb	r2, [r3]
 156:main.c        ****             sample_count++;     //Increment the sample counter
 185              		.loc 1 156 0
 186 00ba B7F85230 		ldrh	r3, [r7, #82]
 187 00be 0133     		adds	r3, r3, #1
 188 00c0 A7F85230 		strh	r3, [r7, #82]	@ movhi
 157:main.c        ****             sample_sum += ADC_DelSig_1_CountsTo_mVolts(ADC_DelSig_1_GetResult16());   //Add the sam
 189              		.loc 1 157 0
 190 00c4 FFF7FEFF 		bl	ADC_DelSig_1_GetResult16
 191 00c8 0346     		mov	r3, r0
 192 00ca 1846     		mov	r0, r3
 193 00cc FFF7FEFF 		bl	ADC_DelSig_1_CountsTo_mVolts
 194 00d0 0346     		mov	r3, r0
 195 00d2 1A46     		mov	r2, r3
 196 00d4 FB6C     		ldr	r3, [r7, #76]
 197 00d6 1344     		add	r3, r3, r2
 198 00d8 FB64     		str	r3, [r7, #76]
 158:main.c        ****             if(sample_count >= SAMPLE_RATE){ //Check if the sample threshhold has been reached
 199              		.loc 1 158 0
 200 00da B7F85230 		ldrh	r3, [r7, #82]
 201 00de 42F20F72 		movw	r2, #9999
 202 00e2 9342     		cmp	r3, r2
 203 00e4 33D9     		bls	.L12
 159:main.c        ****                 average_value = sample_sum / SAMPLE_RATE; //Calculate the average sampled value
 204              		.loc 1 159 0
 205 00e6 FB6C     		ldr	r3, [r7, #76]
 206 00e8 3A4A     		ldr	r2, .L18+8
 207 00ea A2FB0323 		umull	r2, r3, r2, r3
 208 00ee 5B0B     		lsrs	r3, r3, #13
 209 00f0 A7F84A30 		strh	r3, [r7, #74]	@ movhi
ARM GAS  C:\Users\z004e6he\AppData\Local\Temp\ccc7qWF9.s 			page 8


 160:main.c        ****                 sprintf(TransmitBuffer, "{\r\n\t\"Avg ADC Value\": \"%1u mV\",\r\n", average_value)
 210              		.loc 1 160 0
 211 00f4 B7F84A20 		ldrh	r2, [r7, #74]
 212 00f8 3B1D     		adds	r3, r7, #4
 213 00fa 3749     		ldr	r1, .L18+12
 214 00fc 1846     		mov	r0, r3
 215 00fe FFF7FEFF 		bl	sprintf
 161:main.c        ****                 UART_1_PutString(TransmitBuffer);   //Send the output string via UART
 216              		.loc 1 161 0
 217 0102 3B1D     		adds	r3, r7, #4
 218 0104 1846     		mov	r0, r3
 219 0106 FFF7FEFF 		bl	UART_1_PutString
 162:main.c        ****                 sprintf(TransmitBuffer, "\t\"Temperature (Int)\": \"%i.%i C\"\r\n}\r\n", average_va
 220              		.loc 1 162 0
 221 010a B7F84A30 		ldrh	r3, [r7, #74]
 222 010e 334A     		ldr	r2, .L18+16
 223 0110 A2FB0323 		umull	r2, r3, r2, r3
 224 0114 DB08     		lsrs	r3, r3, #3
 225 0116 9BB2     		uxth	r3, r3
 226 0118 1C46     		mov	r4, r3
 227 011a B7F84A20 		ldrh	r2, [r7, #74]
 228 011e 2F4B     		ldr	r3, .L18+16
 229 0120 A3FB0213 		umull	r1, r3, r3, r2
 230 0124 D908     		lsrs	r1, r3, #3
 231 0126 0B46     		mov	r3, r1
 232 0128 9B00     		lsls	r3, r3, #2
 233 012a 0B44     		add	r3, r3, r1
 234 012c 5B00     		lsls	r3, r3, #1
 235 012e D31A     		subs	r3, r2, r3
 236 0130 9BB2     		uxth	r3, r3
 237 0132 381D     		adds	r0, r7, #4
 238 0134 2246     		mov	r2, r4
 239 0136 2A49     		ldr	r1, .L18+20
 240 0138 FFF7FEFF 		bl	sprintf
 163:main.c        ****                 UART_1_PutString(TransmitBuffer);   //Send the output string via UART
 241              		.loc 1 163 0
 242 013c 3B1D     		adds	r3, r7, #4
 243 013e 1846     		mov	r0, r3
 244 0140 FFF7FEFF 		bl	UART_1_PutString
 164:main.c        ****                 sample_count = 0;   //Reset the sample count
 245              		.loc 1 164 0
 246 0144 0023     		movs	r3, #0
 247 0146 A7F85230 		strh	r3, [r7, #82]	@ movhi
 165:main.c        ****                 sample_sum = 0;   //Reset the sample sum value
 248              		.loc 1 165 0
 249 014a 0023     		movs	r3, #0
 250 014c FB64     		str	r3, [r7, #76]
 251              	.L12:
 166:main.c        ****             }
 167:main.c        ****         }
 168:main.c        ****         
 169:main.c        ****         
 170:main.c        ****         /* Check to see if an ADC conversion has completed */
 171:main.c        ****         if(ADC_DelSig_1_IsEndConversion(ADC_DelSig_1_RETURN_STATUS))
 252              		.loc 1 171 0
 253 014e 0120     		movs	r0, #1
 254 0150 FFF7FEFF 		bl	ADC_DelSig_1_IsEndConversion
ARM GAS  C:\Users\z004e6he\AppData\Local\Temp\ccc7qWF9.s 			page 9


 255 0154 0346     		mov	r3, r0
 256 0156 002B     		cmp	r3, #0
 257 0158 3FF473AF 		beq	.L16
 172:main.c        ****         {
 173:main.c        ****             /* Use the GetResult16 API to get an 8 bit unsigned result in
 174:main.c        ****              * single ended mode.  The API CountsTo_mVolts is then used
 175:main.c        ****              * to convert the ADC counts into mV before transmitting via
 176:main.c        ****              * the UART.  See the datasheet API description for more
 177:main.c        ****              * details */
 178:main.c        ****             Output = ADC_DelSig_1_CountsTo_mVolts(ADC_DelSig_1_GetResult16());
 258              		.loc 1 178 0
 259 015c FFF7FEFF 		bl	ADC_DelSig_1_GetResult16
 260 0160 0346     		mov	r3, r0
 261 0162 1846     		mov	r0, r3
 262 0164 FFF7FEFF 		bl	ADC_DelSig_1_CountsTo_mVolts
 263 0168 0346     		mov	r3, r0
 264 016a 7B64     		str	r3, [r7, #68]
 179:main.c        ****             
 180:main.c        ****             /* Send data based on last UART command */
 181:main.c        ****             if(SendSingleByte || ContinuouslySendData)
 265              		.loc 1 181 0
 266 016c 97F85530 		ldrb	r3, [r7, #85]	@ zero_extendqisi2
 267 0170 002B     		cmp	r3, #0
 268 0172 03D1     		bne	.L14
 269              		.loc 1 181 0 is_stmt 0 discriminator 1
 270 0174 97F85630 		ldrb	r3, [r7, #86]	@ zero_extendqisi2
 271 0178 002B     		cmp	r3, #0
 272 017a 0DD0     		beq	.L15
 273              	.L14:
 182:main.c        ****             {
 183:main.c        ****                 /* Format ADC result for transmition */
 184:main.c        ****                 sprintf(TransmitBuffer, "Sample: %lu mV\r\n", Output);
 274              		.loc 1 184 0 is_stmt 1
 275 017c 3B1D     		adds	r3, r7, #4
 276 017e 7A6C     		ldr	r2, [r7, #68]
 277 0180 1849     		ldr	r1, .L18+24
 278 0182 1846     		mov	r0, r3
 279 0184 FFF7FEFF 		bl	sprintf
 185:main.c        ****                 /* Send out the data */
 186:main.c        ****                 UART_1_PutString(TransmitBuffer);
 280              		.loc 1 186 0
 281 0188 3B1D     		adds	r3, r7, #4
 282 018a 1846     		mov	r0, r3
 283 018c FFF7FEFF 		bl	UART_1_PutString
 187:main.c        ****                 /* Reset the send once flag */
 188:main.c        ****                 SendSingleByte = FALSE;
 284              		.loc 1 188 0
 285 0190 0023     		movs	r3, #0
 286 0192 87F85530 		strb	r3, [r7, #85]
 287 0196 17E0     		b	.L13
 288              	.L15:
 189:main.c        ****             }
 190:main.c        ****             else if(SendEmulatedData)
 289              		.loc 1 190 0
 290 0198 97F85430 		ldrb	r3, [r7, #84]	@ zero_extendqisi2
 291 019c 002B     		cmp	r3, #0
 292 019e 3FF450AF 		beq	.L16
ARM GAS  C:\Users\z004e6he\AppData\Local\Temp\ccc7qWF9.s 			page 10


 191:main.c        ****             {
 192:main.c        ****                 /* Format ADC result for transmition */
 193:main.c        ****                 sprintf(TransmitBuffer, "Emulated Data: %x \r\n", EmulatedData);
 293              		.loc 1 193 0
 294 01a2 97F85720 		ldrb	r2, [r7, #87]	@ zero_extendqisi2
 295 01a6 3B1D     		adds	r3, r7, #4
 296 01a8 0F49     		ldr	r1, .L18+28
 297 01aa 1846     		mov	r0, r3
 298 01ac FFF7FEFF 		bl	sprintf
 194:main.c        ****                 /* Send out the data */
 195:main.c        ****                 UART_1_PutString(TransmitBuffer);
 299              		.loc 1 195 0
 300 01b0 3B1D     		adds	r3, r7, #4
 301 01b2 1846     		mov	r0, r3
 302 01b4 FFF7FEFF 		bl	UART_1_PutString
 196:main.c        ****                 EmulatedData++;
 303              		.loc 1 196 0
 304 01b8 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 305 01bc 0133     		adds	r3, r3, #1
 306 01be 87F85730 		strb	r3, [r7, #87]
 197:main.c        ****                 /* Reset the send once flag */
 198:main.c        ****                 SendEmulatedData = FALSE;   
 307              		.loc 1 198 0
 308 01c2 0023     		movs	r3, #0
 309 01c4 87F85430 		strb	r3, [r7, #84]
 310              	.L13:
 199:main.c        ****             }
 200:main.c        ****         }
 201:main.c        ****     }
 311              		.loc 1 201 0
 312 01c8 3BE7     		b	.L16
 313              	.L19:
 314 01ca 00BF     		.align	2
 315              	.L18:
 316 01cc 00000000 		.word	.LC0
 317 01d0 00000000 		.word	gADC_ISR
 318 01d4 5917B7D1 		.word	-776530087
 319 01d8 10000000 		.word	.LC1
 320 01dc CDCCCCCC 		.word	-858993459
 321 01e0 34000000 		.word	.LC2
 322 01e4 5C000000 		.word	.LC3
 323 01e8 70000000 		.word	.LC4
 324              		.cfi_endproc
 325              	.LFE64:
 326              		.size	main, .-main
 327              		.text
 328              	.Letext0:
 329              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 330              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 331              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 332              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 333              		.section	.debug_info,"",%progbits
 334              	.Ldebug_info0:
 335 0000 A2010000 		.4byte	0x1a2
 336 0004 0400     		.2byte	0x4
 337 0006 00000000 		.4byte	.Ldebug_abbrev0
 338 000a 04       		.byte	0x4
ARM GAS  C:\Users\z004e6he\AppData\Local\Temp\ccc7qWF9.s 			page 11


 339 000b 01       		.uleb128 0x1
 340 000c 0D000000 		.4byte	.LASF30
 341 0010 0C       		.byte	0xc
 342 0011 18020000 		.4byte	.LASF31
 343 0015 46010000 		.4byte	.LASF32
 344 0019 00000000 		.4byte	.Ldebug_ranges0+0
 345 001d 00000000 		.4byte	0
 346 0021 00000000 		.4byte	.Ldebug_line0
 347 0025 02       		.uleb128 0x2
 348 0026 01       		.byte	0x1
 349 0027 06       		.byte	0x6
 350 0028 54020000 		.4byte	.LASF0
 351 002c 02       		.uleb128 0x2
 352 002d 01       		.byte	0x1
 353 002e 08       		.byte	0x8
 354 002f 14010000 		.4byte	.LASF1
 355 0033 02       		.uleb128 0x2
 356 0034 02       		.byte	0x2
 357 0035 05       		.byte	0x5
 358 0036 2F020000 		.4byte	.LASF2
 359 003a 02       		.uleb128 0x2
 360 003b 02       		.byte	0x2
 361 003c 07       		.byte	0x7
 362 003d F4000000 		.4byte	.LASF3
 363 0041 03       		.uleb128 0x3
 364 0042 A9000000 		.4byte	.LASF9
 365 0046 02       		.byte	0x2
 366 0047 3F       		.byte	0x3f
 367 0048 4C000000 		.4byte	0x4c
 368 004c 02       		.uleb128 0x2
 369 004d 04       		.byte	0x4
 370 004e 05       		.byte	0x5
 371 004f 3F020000 		.4byte	.LASF4
 372 0053 02       		.uleb128 0x2
 373 0054 04       		.byte	0x4
 374 0055 07       		.byte	0x7
 375 0056 E2000000 		.4byte	.LASF5
 376 005a 02       		.uleb128 0x2
 377 005b 08       		.byte	0x8
 378 005c 05       		.byte	0x5
 379 005d 0A020000 		.4byte	.LASF6
 380 0061 02       		.uleb128 0x2
 381 0062 08       		.byte	0x8
 382 0063 07       		.byte	0x7
 383 0064 CA010000 		.4byte	.LASF7
 384 0068 04       		.uleb128 0x4
 385 0069 04       		.byte	0x4
 386 006a 05       		.byte	0x5
 387 006b 696E7400 		.ascii	"int\000"
 388 006f 02       		.uleb128 0x2
 389 0070 04       		.byte	0x4
 390 0071 07       		.byte	0x7
 391 0072 BD010000 		.4byte	.LASF8
 392 0076 03       		.uleb128 0x3
 393 0077 EA010000 		.4byte	.LASF10
 394 007b 03       		.byte	0x3
 395 007c 2C       		.byte	0x2c
ARM GAS  C:\Users\z004e6he\AppData\Local\Temp\ccc7qWF9.s 			page 12


 396 007d 41000000 		.4byte	0x41
 397 0081 05       		.uleb128 0x5
 398 0082 39020000 		.4byte	.LASF11
 399 0086 04       		.byte	0x4
 400 0087 E801     		.2byte	0x1e8
 401 0089 2C000000 		.4byte	0x2c
 402 008d 05       		.uleb128 0x5
 403 008e 3F010000 		.4byte	.LASF12
 404 0092 04       		.byte	0x4
 405 0093 E901     		.2byte	0x1e9
 406 0095 3A000000 		.4byte	0x3a
 407 0099 05       		.uleb128 0x5
 408 009a B6010000 		.4byte	.LASF13
 409 009e 04       		.byte	0x4
 410 009f EA01     		.2byte	0x1ea
 411 00a1 53000000 		.4byte	0x53
 412 00a5 02       		.uleb128 0x2
 413 00a6 04       		.byte	0x4
 414 00a7 04       		.byte	0x4
 415 00a8 CF000000 		.4byte	.LASF14
 416 00ac 02       		.uleb128 0x2
 417 00ad 08       		.byte	0x8
 418 00ae 04       		.byte	0x4
 419 00af 33010000 		.4byte	.LASF15
 420 00b3 02       		.uleb128 0x2
 421 00b4 01       		.byte	0x1
 422 00b5 08       		.byte	0x8
 423 00b6 1F020000 		.4byte	.LASF16
 424 00ba 06       		.uleb128 0x6
 425 00bb 81000000 		.4byte	0x81
 426 00bf 02       		.uleb128 0x2
 427 00c0 08       		.byte	0x8
 428 00c1 04       		.byte	0x4
 429 00c2 48020000 		.4byte	.LASF17
 430 00c6 02       		.uleb128 0x2
 431 00c7 04       		.byte	0x4
 432 00c8 07       		.byte	0x7
 433 00c9 01020000 		.4byte	.LASF18
 434 00cd 07       		.uleb128 0x7
 435 00ce 3A010000 		.4byte	.LASF33
 436 00d2 01       		.byte	0x1
 437 00d3 54       		.byte	0x54
 438 00d4 68000000 		.4byte	0x68
 439 00d8 00000000 		.4byte	.LFB64
 440 00dc EC010000 		.4byte	.LFE64-.LFB64
 441 00e0 01       		.uleb128 0x1
 442 00e1 9C       		.byte	0x9c
 443 00e2 73010000 		.4byte	0x173
 444 00e6 08       		.uleb128 0x8
 445 00e7 B3000000 		.4byte	.LASF19
 446 00eb 01       		.byte	0x1
 447 00ec 57       		.byte	0x57
 448 00ed 99000000 		.4byte	0x99
 449 00f1 02       		.uleb128 0x2
 450 00f2 91       		.byte	0x91
 451 00f3 5C       		.sleb128 -36
 452 00f4 09       		.uleb128 0x9
ARM GAS  C:\Users\z004e6he\AppData\Local\Temp\ccc7qWF9.s 			page 13


 453 00f5 436800   		.ascii	"Ch\000"
 454 00f8 01       		.byte	0x1
 455 00f9 59       		.byte	0x59
 456 00fa 81000000 		.4byte	0x81
 457 00fe 02       		.uleb128 0x2
 458 00ff 91       		.byte	0x91
 459 0100 61       		.sleb128 -31
 460 0101 08       		.uleb128 0x8
 461 0102 00000000 		.4byte	.LASF20
 462 0106 01       		.byte	0x1
 463 0107 5B       		.byte	0x5b
 464 0108 81000000 		.4byte	0x81
 465 010c 02       		.uleb128 0x2
 466 010d 91       		.byte	0x91
 467 010e 6F       		.sleb128 -17
 468 010f 08       		.uleb128 0x8
 469 0110 BA000000 		.4byte	.LASF21
 470 0114 01       		.byte	0x1
 471 0115 5D       		.byte	0x5d
 472 0116 81000000 		.4byte	0x81
 473 011a 02       		.uleb128 0x2
 474 011b 91       		.byte	0x91
 475 011c 6E       		.sleb128 -18
 476 011d 08       		.uleb128 0x8
 477 011e 60020000 		.4byte	.LASF22
 478 0122 01       		.byte	0x1
 479 0123 5E       		.byte	0x5e
 480 0124 81000000 		.4byte	0x81
 481 0128 02       		.uleb128 0x2
 482 0129 91       		.byte	0x91
 483 012a 6D       		.sleb128 -19
 484 012b 08       		.uleb128 0x8
 485 012c 22010000 		.4byte	.LASF23
 486 0130 01       		.byte	0x1
 487 0131 5F       		.byte	0x5f
 488 0132 81000000 		.4byte	0x81
 489 0136 02       		.uleb128 0x2
 490 0137 91       		.byte	0x91
 491 0138 6C       		.sleb128 -20
 492 0139 08       		.uleb128 0x8
 493 013a F2010000 		.4byte	.LASF24
 494 013e 01       		.byte	0x1
 495 013f 61       		.byte	0x61
 496 0140 73010000 		.4byte	0x173
 497 0144 03       		.uleb128 0x3
 498 0145 91       		.byte	0x91
 499 0146 9C7F     		.sleb128 -100
 500 0148 08       		.uleb128 0x8
 501 0149 D5000000 		.4byte	.LASF25
 502 014d 01       		.byte	0x1
 503 014e 75       		.byte	0x75
 504 014f 8D000000 		.4byte	0x8d
 505 0153 02       		.uleb128 0x2
 506 0154 91       		.byte	0x91
 507 0155 6A       		.sleb128 -22
 508 0156 08       		.uleb128 0x8
 509 0157 24020000 		.4byte	.LASF26
ARM GAS  C:\Users\z004e6he\AppData\Local\Temp\ccc7qWF9.s 			page 14


 510 015b 01       		.byte	0x1
 511 015c 76       		.byte	0x76
 512 015d 99000000 		.4byte	0x99
 513 0161 02       		.uleb128 0x2
 514 0162 91       		.byte	0x91
 515 0163 64       		.sleb128 -28
 516 0164 08       		.uleb128 0x8
 517 0165 9B000000 		.4byte	.LASF27
 518 0169 01       		.byte	0x1
 519 016a 77       		.byte	0x77
 520 016b 8D000000 		.4byte	0x8d
 521 016f 02       		.uleb128 0x2
 522 0170 91       		.byte	0x91
 523 0171 62       		.sleb128 -30
 524 0172 00       		.byte	0
 525 0173 0A       		.uleb128 0xa
 526 0174 B3000000 		.4byte	0xb3
 527 0178 83010000 		.4byte	0x183
 528 017c 0B       		.uleb128 0xb
 529 017d C6000000 		.4byte	0xc6
 530 0181 3F       		.byte	0x3f
 531 0182 00       		.byte	0
 532 0183 0C       		.uleb128 0xc
 533 0184 07010000 		.4byte	.LASF28
 534 0188 05       		.byte	0x5
 535 0189 1207     		.2byte	0x712
 536 018b 8F010000 		.4byte	0x18f
 537 018f 06       		.uleb128 0x6
 538 0190 76000000 		.4byte	0x76
 539 0194 0D       		.uleb128 0xd
 540 0195 E1010000 		.4byte	.LASF29
 541 0199 01       		.byte	0x1
 542 019a 3B       		.byte	0x3b
 543 019b BA000000 		.4byte	0xba
 544 019f 05       		.uleb128 0x5
 545 01a0 03       		.byte	0x3
 546 01a1 00000000 		.4byte	gADC_ISR
 547 01a5 00       		.byte	0
 548              		.section	.debug_abbrev,"",%progbits
 549              	.Ldebug_abbrev0:
 550 0000 01       		.uleb128 0x1
 551 0001 11       		.uleb128 0x11
 552 0002 01       		.byte	0x1
 553 0003 25       		.uleb128 0x25
 554 0004 0E       		.uleb128 0xe
 555 0005 13       		.uleb128 0x13
 556 0006 0B       		.uleb128 0xb
 557 0007 03       		.uleb128 0x3
 558 0008 0E       		.uleb128 0xe
 559 0009 1B       		.uleb128 0x1b
 560 000a 0E       		.uleb128 0xe
 561 000b 55       		.uleb128 0x55
 562 000c 17       		.uleb128 0x17
 563 000d 11       		.uleb128 0x11
 564 000e 01       		.uleb128 0x1
 565 000f 10       		.uleb128 0x10
 566 0010 17       		.uleb128 0x17
ARM GAS  C:\Users\z004e6he\AppData\Local\Temp\ccc7qWF9.s 			page 15


 567 0011 00       		.byte	0
 568 0012 00       		.byte	0
 569 0013 02       		.uleb128 0x2
 570 0014 24       		.uleb128 0x24
 571 0015 00       		.byte	0
 572 0016 0B       		.uleb128 0xb
 573 0017 0B       		.uleb128 0xb
 574 0018 3E       		.uleb128 0x3e
 575 0019 0B       		.uleb128 0xb
 576 001a 03       		.uleb128 0x3
 577 001b 0E       		.uleb128 0xe
 578 001c 00       		.byte	0
 579 001d 00       		.byte	0
 580 001e 03       		.uleb128 0x3
 581 001f 16       		.uleb128 0x16
 582 0020 00       		.byte	0
 583 0021 03       		.uleb128 0x3
 584 0022 0E       		.uleb128 0xe
 585 0023 3A       		.uleb128 0x3a
 586 0024 0B       		.uleb128 0xb
 587 0025 3B       		.uleb128 0x3b
 588 0026 0B       		.uleb128 0xb
 589 0027 49       		.uleb128 0x49
 590 0028 13       		.uleb128 0x13
 591 0029 00       		.byte	0
 592 002a 00       		.byte	0
 593 002b 04       		.uleb128 0x4
 594 002c 24       		.uleb128 0x24
 595 002d 00       		.byte	0
 596 002e 0B       		.uleb128 0xb
 597 002f 0B       		.uleb128 0xb
 598 0030 3E       		.uleb128 0x3e
 599 0031 0B       		.uleb128 0xb
 600 0032 03       		.uleb128 0x3
 601 0033 08       		.uleb128 0x8
 602 0034 00       		.byte	0
 603 0035 00       		.byte	0
 604 0036 05       		.uleb128 0x5
 605 0037 16       		.uleb128 0x16
 606 0038 00       		.byte	0
 607 0039 03       		.uleb128 0x3
 608 003a 0E       		.uleb128 0xe
 609 003b 3A       		.uleb128 0x3a
 610 003c 0B       		.uleb128 0xb
 611 003d 3B       		.uleb128 0x3b
 612 003e 05       		.uleb128 0x5
 613 003f 49       		.uleb128 0x49
 614 0040 13       		.uleb128 0x13
 615 0041 00       		.byte	0
 616 0042 00       		.byte	0
 617 0043 06       		.uleb128 0x6
 618 0044 35       		.uleb128 0x35
 619 0045 00       		.byte	0
 620 0046 49       		.uleb128 0x49
 621 0047 13       		.uleb128 0x13
 622 0048 00       		.byte	0
 623 0049 00       		.byte	0
ARM GAS  C:\Users\z004e6he\AppData\Local\Temp\ccc7qWF9.s 			page 16


 624 004a 07       		.uleb128 0x7
 625 004b 2E       		.uleb128 0x2e
 626 004c 01       		.byte	0x1
 627 004d 3F       		.uleb128 0x3f
 628 004e 19       		.uleb128 0x19
 629 004f 03       		.uleb128 0x3
 630 0050 0E       		.uleb128 0xe
 631 0051 3A       		.uleb128 0x3a
 632 0052 0B       		.uleb128 0xb
 633 0053 3B       		.uleb128 0x3b
 634 0054 0B       		.uleb128 0xb
 635 0055 49       		.uleb128 0x49
 636 0056 13       		.uleb128 0x13
 637 0057 11       		.uleb128 0x11
 638 0058 01       		.uleb128 0x1
 639 0059 12       		.uleb128 0x12
 640 005a 06       		.uleb128 0x6
 641 005b 40       		.uleb128 0x40
 642 005c 18       		.uleb128 0x18
 643 005d 9642     		.uleb128 0x2116
 644 005f 19       		.uleb128 0x19
 645 0060 01       		.uleb128 0x1
 646 0061 13       		.uleb128 0x13
 647 0062 00       		.byte	0
 648 0063 00       		.byte	0
 649 0064 08       		.uleb128 0x8
 650 0065 34       		.uleb128 0x34
 651 0066 00       		.byte	0
 652 0067 03       		.uleb128 0x3
 653 0068 0E       		.uleb128 0xe
 654 0069 3A       		.uleb128 0x3a
 655 006a 0B       		.uleb128 0xb
 656 006b 3B       		.uleb128 0x3b
 657 006c 0B       		.uleb128 0xb
 658 006d 49       		.uleb128 0x49
 659 006e 13       		.uleb128 0x13
 660 006f 02       		.uleb128 0x2
 661 0070 18       		.uleb128 0x18
 662 0071 00       		.byte	0
 663 0072 00       		.byte	0
 664 0073 09       		.uleb128 0x9
 665 0074 34       		.uleb128 0x34
 666 0075 00       		.byte	0
 667 0076 03       		.uleb128 0x3
 668 0077 08       		.uleb128 0x8
 669 0078 3A       		.uleb128 0x3a
 670 0079 0B       		.uleb128 0xb
 671 007a 3B       		.uleb128 0x3b
 672 007b 0B       		.uleb128 0xb
 673 007c 49       		.uleb128 0x49
 674 007d 13       		.uleb128 0x13
 675 007e 02       		.uleb128 0x2
 676 007f 18       		.uleb128 0x18
 677 0080 00       		.byte	0
 678 0081 00       		.byte	0
 679 0082 0A       		.uleb128 0xa
 680 0083 01       		.uleb128 0x1
ARM GAS  C:\Users\z004e6he\AppData\Local\Temp\ccc7qWF9.s 			page 17


 681 0084 01       		.byte	0x1
 682 0085 49       		.uleb128 0x49
 683 0086 13       		.uleb128 0x13
 684 0087 01       		.uleb128 0x1
 685 0088 13       		.uleb128 0x13
 686 0089 00       		.byte	0
 687 008a 00       		.byte	0
 688 008b 0B       		.uleb128 0xb
 689 008c 21       		.uleb128 0x21
 690 008d 00       		.byte	0
 691 008e 49       		.uleb128 0x49
 692 008f 13       		.uleb128 0x13
 693 0090 2F       		.uleb128 0x2f
 694 0091 0B       		.uleb128 0xb
 695 0092 00       		.byte	0
 696 0093 00       		.byte	0
 697 0094 0C       		.uleb128 0xc
 698 0095 34       		.uleb128 0x34
 699 0096 00       		.byte	0
 700 0097 03       		.uleb128 0x3
 701 0098 0E       		.uleb128 0xe
 702 0099 3A       		.uleb128 0x3a
 703 009a 0B       		.uleb128 0xb
 704 009b 3B       		.uleb128 0x3b
 705 009c 05       		.uleb128 0x5
 706 009d 49       		.uleb128 0x49
 707 009e 13       		.uleb128 0x13
 708 009f 3F       		.uleb128 0x3f
 709 00a0 19       		.uleb128 0x19
 710 00a1 3C       		.uleb128 0x3c
 711 00a2 19       		.uleb128 0x19
 712 00a3 00       		.byte	0
 713 00a4 00       		.byte	0
 714 00a5 0D       		.uleb128 0xd
 715 00a6 34       		.uleb128 0x34
 716 00a7 00       		.byte	0
 717 00a8 03       		.uleb128 0x3
 718 00a9 0E       		.uleb128 0xe
 719 00aa 3A       		.uleb128 0x3a
 720 00ab 0B       		.uleb128 0xb
 721 00ac 3B       		.uleb128 0x3b
 722 00ad 0B       		.uleb128 0xb
 723 00ae 49       		.uleb128 0x49
 724 00af 13       		.uleb128 0x13
 725 00b0 3F       		.uleb128 0x3f
 726 00b1 19       		.uleb128 0x19
 727 00b2 02       		.uleb128 0x2
 728 00b3 18       		.uleb128 0x18
 729 00b4 00       		.byte	0
 730 00b5 00       		.byte	0
 731 00b6 00       		.byte	0
 732              		.section	.debug_aranges,"",%progbits
 733 0000 1C000000 		.4byte	0x1c
 734 0004 0200     		.2byte	0x2
 735 0006 00000000 		.4byte	.Ldebug_info0
 736 000a 04       		.byte	0x4
 737 000b 00       		.byte	0
ARM GAS  C:\Users\z004e6he\AppData\Local\Temp\ccc7qWF9.s 			page 18


 738 000c 0000     		.2byte	0
 739 000e 0000     		.2byte	0
 740 0010 00000000 		.4byte	.LFB64
 741 0014 EC010000 		.4byte	.LFE64-.LFB64
 742 0018 00000000 		.4byte	0
 743 001c 00000000 		.4byte	0
 744              		.section	.debug_ranges,"",%progbits
 745              	.Ldebug_ranges0:
 746 0000 00000000 		.4byte	.LFB64
 747 0004 EC010000 		.4byte	.LFE64
 748 0008 00000000 		.4byte	0
 749 000c 00000000 		.4byte	0
 750              		.section	.debug_line,"",%progbits
 751              	.Ldebug_line0:
 752 0000 B6010000 		.section	.debug_str,"MS",%progbits,1
 752      02004C01 
 752      00000201 
 752      FB0E0D00 
 752      01010101 
 753              	.LASF20:
 754 0000 456D756C 		.ascii	"EmulatedData\000"
 754      61746564 
 754      44617461 
 754      00
 755              	.LASF30:
 756 000d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 756      43313120 
 756      352E342E 
 756      31203230 
 756      31363036 
 757 0040 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 757      20726576 
 757      6973696F 
 757      6E203233 
 757      37373135 
 758 0073 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 758      66756E63 
 758      74696F6E 
 758      2D736563 
 758      74696F6E 
 759              	.LASF27:
 760 009b 61766572 		.ascii	"average_value\000"
 760      6167655F 
 760      76616C75 
 760      6500
 761              	.LASF9:
 762 00a9 5F5F696E 		.ascii	"__int32_t\000"
 762      7433325F 
 762      7400
 763              	.LASF19:
 764 00b3 4F757470 		.ascii	"Output\000"
 764      757400
 765              	.LASF21:
 766 00ba 436F6E74 		.ascii	"ContinuouslySendData\000"
 766      696E756F 
 766      75736C79 
 766      53656E64 
ARM GAS  C:\Users\z004e6he\AppData\Local\Temp\ccc7qWF9.s 			page 19


 766      44617461 
 767              	.LASF14:
 768 00cf 666C6F61 		.ascii	"float\000"
 768      7400
 769              	.LASF25:
 770 00d5 73616D70 		.ascii	"sample_count\000"
 770      6C655F63 
 770      6F756E74 
 770      00
 771              	.LASF5:
 772 00e2 6C6F6E67 		.ascii	"long unsigned int\000"
 772      20756E73 
 772      69676E65 
 772      6420696E 
 772      7400
 773              	.LASF3:
 774 00f4 73686F72 		.ascii	"short unsigned int\000"
 774      7420756E 
 774      7369676E 
 774      65642069 
 774      6E7400
 775              	.LASF28:
 776 0107 49544D5F 		.ascii	"ITM_RxBuffer\000"
 776      52784275 
 776      66666572 
 776      00
 777              	.LASF1:
 778 0114 756E7369 		.ascii	"unsigned char\000"
 778      676E6564 
 778      20636861 
 778      7200
 779              	.LASF23:
 780 0122 53656E64 		.ascii	"SendEmulatedData\000"
 780      456D756C 
 780      61746564 
 780      44617461 
 780      00
 781              	.LASF15:
 782 0133 646F7562 		.ascii	"double\000"
 782      6C6500
 783              	.LASF33:
 784 013a 6D61696E 		.ascii	"main\000"
 784      00
 785              	.LASF12:
 786 013f 75696E74 		.ascii	"uint16\000"
 786      313600
 787              	.LASF32:
 788 0146 433A5C55 		.ascii	"C:\\UserData\\z004e6he\\OneDrive - Siemens AG\\Docu"
 788      73657244 
 788      6174615C 
 788      7A303034 
 788      65366865 
 789 0175 6D656E74 		.ascii	"ments\\PSoC Creator\\PSoC\\Exercise5\\LucaSpenglerP"
 789      735C5053 
 789      6F432043 
 789      72656174 
 789      6F725C50 
ARM GAS  C:\Users\z004e6he\AppData\Local\Temp\ccc7qWF9.s 			page 20


 790 01a4 536F4335 		.ascii	"SoC5OneWire.cydsn\000"
 790      4F6E6557 
 790      6972652E 
 790      63796473 
 790      6E00
 791              	.LASF13:
 792 01b6 75696E74 		.ascii	"uint32\000"
 792      333200
 793              	.LASF8:
 794 01bd 756E7369 		.ascii	"unsigned int\000"
 794      676E6564 
 794      20696E74 
 794      00
 795              	.LASF7:
 796 01ca 6C6F6E67 		.ascii	"long long unsigned int\000"
 796      206C6F6E 
 796      6720756E 
 796      7369676E 
 796      65642069 
 797              	.LASF29:
 798 01e1 67414443 		.ascii	"gADC_ISR\000"
 798      5F495352 
 798      00
 799              	.LASF10:
 800 01ea 696E7433 		.ascii	"int32_t\000"
 800      325F7400 
 801              	.LASF24:
 802 01f2 5472616E 		.ascii	"TransmitBuffer\000"
 802      736D6974 
 802      42756666 
 802      657200
 803              	.LASF18:
 804 0201 73697A65 		.ascii	"sizetype\000"
 804      74797065 
 804      00
 805              	.LASF6:
 806 020a 6C6F6E67 		.ascii	"long long int\000"
 806      206C6F6E 
 806      6720696E 
 806      7400
 807              	.LASF31:
 808 0218 6D61696E 		.ascii	"main.c\000"
 808      2E6300
 809              	.LASF16:
 810 021f 63686172 		.ascii	"char\000"
 810      00
 811              	.LASF26:
 812 0224 73616D70 		.ascii	"sample_sum\000"
 812      6C655F73 
 812      756D00
 813              	.LASF2:
 814 022f 73686F72 		.ascii	"short int\000"
 814      7420696E 
 814      7400
 815              	.LASF11:
 816 0239 75696E74 		.ascii	"uint8\000"
 816      3800
ARM GAS  C:\Users\z004e6he\AppData\Local\Temp\ccc7qWF9.s 			page 21


 817              	.LASF4:
 818 023f 6C6F6E67 		.ascii	"long int\000"
 818      20696E74 
 818      00
 819              	.LASF17:
 820 0248 6C6F6E67 		.ascii	"long double\000"
 820      20646F75 
 820      626C6500 
 821              	.LASF0:
 822 0254 7369676E 		.ascii	"signed char\000"
 822      65642063 
 822      68617200 
 823              	.LASF22:
 824 0260 53656E64 		.ascii	"SendSingleByte\000"
 824      53696E67 
 824      6C654279 
 824      746500
 825              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
