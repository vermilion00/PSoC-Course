ARM GAS  C:\Users\z004e6he\AppData\Local\Temp\ccf88S6o.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	gADC_ISR
  20              		.bss
  21              		.type	gADC_ISR, %object
  22              		.size	gADC_ISR, 1
  23              	gADC_ISR:
  24 0000 00       		.space	1
  25              		.section	.rodata
  26              		.align	2
  27              	.LC0:
  28 0000 434F4D20 		.ascii	"COM Port Open\015\012\000"
  28      506F7274 
  28      204F7065 
  28      6E0D0A00 
  29              		.align	2
  30              	.LC1:
  31 0010 7B0D0A09 		.ascii	"{\015\012\011\"Avg ADC Value\": \"%1u mV\",\015\012"
  31      22417667 
  31      20414443 
  31      2056616C 
  31      7565223A 
  32 0030 00       		.ascii	"\000"
  33 0031 000000   		.align	2
  34              	.LC2:
  35 0034 09225465 		.ascii	"\011\"Temperature\": \"%i.%i C\"\015\012}\015\012\000"
  35      6D706572 
  35      61747572 
  35      65223A20 
  35      2225692E 
  36 0053 00       		.align	2
  37              	.LC3:
  38 0054 53616D70 		.ascii	"Sample: %lu mV\015\012\000"
  38      6C653A20 
  38      256C7520 
  38      6D560D0A 
  38      00
  39 0065 000000   		.align	2
  40              	.LC4:
  41 0068 456D756C 		.ascii	"Emulated Data: %x \015\012\000"
  41      61746564 
ARM GAS  C:\Users\z004e6he\AppData\Local\Temp\ccf88S6o.s 			page 2


  41      20446174 
  41      613A2025 
  41      78200D0A 
  42              		.section	.text.main,"ax",%progbits
  43              		.align	2
  44              		.global	main
  45              		.thumb
  46              		.thumb_func
  47              		.type	main, %function
  48              	main:
  49              	.LFB64:
  50              		.file 1 "main.c"
   1:main.c        **** /*
   2:main.c        **** * ===============================================================================
   3:main.c        **** *
   4:main.c        **** * Names: Luca Spengler (1399655), Fabian Fritz (1394906)
   5:main.c        **** * Emails: luca.spengler2@stud.fra-uas.de, fabian.fritz@stud.fra-uas.de
   6:main.c        **** * Date: 10.04.2024
   7:main.c        **** * Course ID: TX00DB04
   8:main.c        **** * Description: This program reads the analog output of a temperature sensor and
   9:main.c        **** *              outputs the average of the results over a period of 1 second
  10:main.c        **** *              in mV and °C over UART in the JSON format.
  11:main.c        **** *
  12:main.c        **** * ===============================================================================
  13:main.c        **** *
  14:main.c        **** *
  15:main.c        **** *******************************************************************************
  16:main.c        **** * Copyright (2018-2020), Cypress Semiconductor Corporation. All rights reserved.
  17:main.c        **** *******************************************************************************
  18:main.c        **** * This software, including source code, documentation and related materials
  19:main.c        **** * (“Software”), is owned by Cypress Semiconductor Corporation or one of its
  20:main.c        **** * subsidiaries (“Cypress”) and is protected by and subject to worldwide patent
  21:main.c        **** * protection (United States and foreign), United States copyright laws and
  22:main.c        **** * international treaty provisions. Therefore, you may use this Software only
  23:main.c        **** * as provided in the license agreement accompanying the software package from
  24:main.c        **** * which you obtained this Software (“EULA”).
  25:main.c        **** *
  26:main.c        **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  27:main.c        **** * non-transferable license to copy, modify, and compile the Software source
  28:main.c        **** * code solely for use in connection with Cypress’s integrated circuit products.
  29:main.c        **** * Any reproduction, modification, translation, compilation, or representation
  30:main.c        **** * of this Software except as specified above is prohibited without the express
  31:main.c        **** * written permission of Cypress.
  32:main.c        **** *
  33:main.c        **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO WARRANTY OF ANY KIND, 
  34:main.c        **** * EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED 
  35:main.c        **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. Cypress 
  36:main.c        **** * reserves the right to make changes to the Software without notice. Cypress 
  37:main.c        **** * does not assume any liability arising out of the application or use of the 
  38:main.c        **** * Software or any product or circuit described in the Software. Cypress does 
  39:main.c        **** * not authorize its products for use in any products where a malfunction or 
  40:main.c        **** * failure of the Cypress product may reasonably be expected to result in 
  41:main.c        **** * significant property damage, injury or death (“High Risk Product”). By 
  42:main.c        **** * including Cypress’s product in a High Risk Product, the manufacturer of such 
  43:main.c        **** * system or application assumes all risk of such use and in doing so agrees to 
  44:main.c        **** * indemnify Cypress against all liability.
  45:main.c        **** *******************************************************************************/
ARM GAS  C:\Users\z004e6he\AppData\Local\Temp\ccf88S6o.s 			page 3


  46:main.c        **** 
  47:main.c        **** #include <project.h>
  48:main.c        **** #include "stdio.h"
  49:main.c        **** #include <stdlib.h>
  50:main.c        **** 
  51:main.c        **** /* Project Defines */
  52:main.c        **** #define FALSE  0
  53:main.c        **** #define TRUE   1
  54:main.c        **** #define TRANSMIT_BUFFER_SIZE  64
  55:main.c        **** #define SAMPLE_RATE 10000   //10000 Samples per second
  56:main.c        **** #define CONVERSION_RATE 10 //10 mV per 1°C
  57:main.c        **** #define TEN_CONSTANT 10 //Constant for modulo operation
  58:main.c        **** 
  59:main.c        **** volatile uint8 gADC_ISR = FALSE;    //ADC ISR flag
  60:main.c        **** 
  61:main.c        **** 
  62:main.c        **** /*******************************************************************************
  63:main.c        **** * Function Name: main
  64:main.c        **** ********************************************************************************
  65:main.c        **** *
  66:main.c        **** * Summary:
  67:main.c        **** *  main() performs following functions:
  68:main.c        **** *  1: Starts the ADC and UART components.
  69:main.c        **** *  2: Checks for ADC end of conversion.  Stores latest result in output
  70:main.c        **** *     if conversion complete.
  71:main.c        **** *  3: Checks for UART input.
  72:main.c        **** *     On 'C' or 'c' received: transmits the last sample via the UART.
  73:main.c        **** *     On 'S' or 's' received: continuously transmits samples as they are completed.
  74:main.c        **** *     On 'X' or 'x' received: stops continuously transmitting samples.
  75:main.c        **** *     On 'E' or 'e' received: transmits a dummy byte of data.
  76:main.c        **** *
  77:main.c        **** * Parameters:
  78:main.c        **** *  None.
  79:main.c        **** *
  80:main.c        **** * Return:
  81:main.c        **** *  None.
  82:main.c        **** *
  83:main.c        **** *******************************************************************************/
  84:main.c        **** int main()
  85:main.c        **** {
  51              		.loc 1 85 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 88
  54              		@ frame_needed = 1, uses_anonymous_args = 0
  55 0000 90B5     		push	{r4, r7, lr}
  56              		.cfi_def_cfa_offset 12
  57              		.cfi_offset 4, -12
  58              		.cfi_offset 7, -8
  59              		.cfi_offset 14, -4
  60 0002 97B0     		sub	sp, sp, #92
  61              		.cfi_def_cfa_offset 104
  62 0004 00AF     		add	r7, sp, #0
  63              		.cfi_def_cfa_register 7
  86:main.c        ****     /* Variable to store ADC result */
  87:main.c        ****     uint32 Output;
  88:main.c        ****     /* Variable to store UART received character */
  89:main.c        ****     uint8 Ch;
ARM GAS  C:\Users\z004e6he\AppData\Local\Temp\ccf88S6o.s 			page 4


  90:main.c        ****     /* Variable used to send emulated data */
  91:main.c        ****     uint8 EmulatedData;
  92:main.c        ****     /* Flags used to store transmit data commands */
  93:main.c        ****     uint8 ContinuouslySendData;
  94:main.c        ****     uint8 SendSingleByte;
  95:main.c        ****     uint8 SendEmulatedData;
  96:main.c        ****     /* Transmit Buffer */
  97:main.c        ****     char TransmitBuffer[TRANSMIT_BUFFER_SIZE];
  98:main.c        ****     
  99:main.c        ****     /* Start the components */
 100:main.c        ****     ADC_DelSig_1_Start();
  64              		.loc 1 100 0
  65 0006 FFF7FEFF 		bl	ADC_DelSig_1_Start
 101:main.c        ****     UART_1_Start();
  66              		.loc 1 101 0
  67 000a FFF7FEFF 		bl	UART_1_Start
 102:main.c        ****     
 103:main.c        ****     /* Initialize Variables */
 104:main.c        ****     ContinuouslySendData = FALSE;
  68              		.loc 1 104 0
  69 000e 0023     		movs	r3, #0
  70 0010 87F85630 		strb	r3, [r7, #86]
 105:main.c        ****     SendSingleByte = FALSE;
  71              		.loc 1 105 0
  72 0014 0023     		movs	r3, #0
  73 0016 87F85530 		strb	r3, [r7, #85]
 106:main.c        ****     SendEmulatedData = FALSE;
  74              		.loc 1 106 0
  75 001a 0023     		movs	r3, #0
  76 001c 87F85430 		strb	r3, [r7, #84]
 107:main.c        ****     EmulatedData = 0;
  77              		.loc 1 107 0
  78 0020 0023     		movs	r3, #0
  79 0022 87F85730 		strb	r3, [r7, #87]
 108:main.c        ****     
 109:main.c        ****     /* Start the ADC conversion */
 110:main.c        ****     ADC_DelSig_1_StartConvert();
  80              		.loc 1 110 0
  81 0026 FFF7FEFF 		bl	ADC_DelSig_1_StartConvert
 111:main.c        ****     
 112:main.c        ****     /* Send message to verify COM port is connected properly */
 113:main.c        ****     UART_1_PutString("COM Port Open\r\n");
  82              		.loc 1 113 0
  83 002a 6848     		ldr	r0, .L18
  84 002c FFF7FEFF 		bl	UART_1_PutString
 114:main.c        ****     
 115:main.c        ****     CyGlobalIntEnable;
  85              		.loc 1 115 0
  86              		.syntax unified
  87              	@ 115 "main.c" 1
  88 0030 62B6     		CPSIE   i
  89              	@ 0 "" 2
 116:main.c        ****     
 117:main.c        ****     uint16 sample_count = 0; //Counts the amount of samples
  90              		.loc 1 117 0
  91              		.thumb
  92              		.syntax unified
ARM GAS  C:\Users\z004e6he\AppData\Local\Temp\ccf88S6o.s 			page 5


  93 0032 0023     		movs	r3, #0
  94 0034 A7F85230 		strh	r3, [r7, #82]	@ movhi
 118:main.c        ****     uint32 sample_sum = 0; //Stores the sum of the sample values
  95              		.loc 1 118 0
  96 0038 0023     		movs	r3, #0
  97 003a FB64     		str	r3, [r7, #76]
 119:main.c        ****     uint16 average_value = 0; //Stores the average value of the sample value sum
  98              		.loc 1 119 0
  99 003c 0023     		movs	r3, #0
 100 003e A7F84A30 		strh	r3, [r7, #74]	@ movhi
 101              	.L16:
 120:main.c        ****     
 121:main.c        ****     for(;;)
 122:main.c        ****     {        
 123:main.c        ****         /* Non-blocking call to get the latest data recieved  */
 124:main.c        ****         Ch = UART_1_GetChar();
 102              		.loc 1 124 0
 103 0042 FFF7FEFF 		bl	UART_1_GetChar
 104 0046 0346     		mov	r3, r0
 105 0048 87F84930 		strb	r3, [r7, #73]
 125:main.c        ****         
 126:main.c        ****         /* Set flags based on UART command */
 127:main.c        ****         switch(Ch)
 106              		.loc 1 127 0
 107 004c 97F84930 		ldrb	r3, [r7, #73]	@ zero_extendqisi2
 108 0050 582B     		cmp	r3, #88
 109 0052 21D0     		beq	.L3
 110 0054 582B     		cmp	r3, #88
 111 0056 0BDC     		bgt	.L4
 112 0058 432B     		cmp	r3, #67
 113 005a 15D0     		beq	.L5
 114 005c 432B     		cmp	r3, #67
 115 005e 02DC     		bgt	.L6
 116 0060 002B     		cmp	r3, #0
 117 0062 21D0     		beq	.L17
 128:main.c        ****         {
 129:main.c        ****             case 0:
 130:main.c        ****                 /* No new data was recieved */
 131:main.c        ****                 break;
 132:main.c        ****             case 'C':
 133:main.c        ****             case 'c':
 134:main.c        ****                 SendSingleByte = TRUE;
 135:main.c        ****                 break;
 136:main.c        ****             case 'S':
 137:main.c        ****             case 's':
 138:main.c        ****                 ContinuouslySendData = TRUE;
 139:main.c        ****                 break;
 140:main.c        ****             case 'X':
 141:main.c        ****             case 'x':
 142:main.c        ****                 ContinuouslySendData = FALSE;
 143:main.c        ****                 break;
 144:main.c        ****             case 'E':
 145:main.c        ****             case 'e':
 146:main.c        ****                 SendEmulatedData = TRUE;
 147:main.c        ****                 break;
 148:main.c        ****             default:
 149:main.c        ****                 /* Place error handling code here */
ARM GAS  C:\Users\z004e6he\AppData\Local\Temp\ccf88S6o.s 			page 6


 150:main.c        ****                 break;    
 118              		.loc 1 150 0
 119 0064 21E0     		b	.L11
 120              	.L6:
 127:main.c        ****         {
 121              		.loc 1 127 0
 122 0066 452B     		cmp	r3, #69
 123 0068 1AD0     		beq	.L8
 124 006a 532B     		cmp	r3, #83
 125 006c 10D0     		beq	.L9
 126              		.loc 1 150 0
 127 006e 1CE0     		b	.L11
 128              	.L4:
 127:main.c        ****         {
 129              		.loc 1 127 0
 130 0070 652B     		cmp	r3, #101
 131 0072 15D0     		beq	.L8
 132 0074 652B     		cmp	r3, #101
 133 0076 02DC     		bgt	.L10
 134 0078 632B     		cmp	r3, #99
 135 007a 05D0     		beq	.L5
 136              		.loc 1 150 0
 137 007c 15E0     		b	.L11
 138              	.L10:
 127:main.c        ****         {
 139              		.loc 1 127 0
 140 007e 732B     		cmp	r3, #115
 141 0080 06D0     		beq	.L9
 142 0082 782B     		cmp	r3, #120
 143 0084 08D0     		beq	.L3
 144              		.loc 1 150 0
 145 0086 10E0     		b	.L11
 146              	.L5:
 134:main.c        ****                 break;
 147              		.loc 1 134 0
 148 0088 0123     		movs	r3, #1
 149 008a 87F85530 		strb	r3, [r7, #85]
 135:main.c        ****             case 'S':
 150              		.loc 1 135 0
 151 008e 0CE0     		b	.L11
 152              	.L9:
 138:main.c        ****                 break;
 153              		.loc 1 138 0
 154 0090 0123     		movs	r3, #1
 155 0092 87F85630 		strb	r3, [r7, #86]
 139:main.c        ****             case 'X':
 156              		.loc 1 139 0
 157 0096 08E0     		b	.L11
 158              	.L3:
 142:main.c        ****                 break;
 159              		.loc 1 142 0
 160 0098 0023     		movs	r3, #0
 161 009a 87F85630 		strb	r3, [r7, #86]
 143:main.c        ****             case 'E':
 162              		.loc 1 143 0
 163 009e 04E0     		b	.L11
 164              	.L8:
ARM GAS  C:\Users\z004e6he\AppData\Local\Temp\ccf88S6o.s 			page 7


 146:main.c        ****                 break;
 165              		.loc 1 146 0
 166 00a0 0123     		movs	r3, #1
 167 00a2 87F85430 		strb	r3, [r7, #84]
 147:main.c        ****             default:
 168              		.loc 1 147 0
 169 00a6 00E0     		b	.L11
 170              	.L17:
 131:main.c        ****             case 'C':
 171              		.loc 1 131 0
 172 00a8 00BF     		nop
 173              	.L11:
 151:main.c        ****         }
 152:main.c        ****         if(gADC_ISR){   //Check if the ADC ISR flag is set
 174              		.loc 1 152 0
 175 00aa 494B     		ldr	r3, .L18+4
 176 00ac 1B78     		ldrb	r3, [r3]
 177 00ae DBB2     		uxtb	r3, r3
 178 00b0 002B     		cmp	r3, #0
 179 00b2 4CD0     		beq	.L12
 153:main.c        ****             gADC_ISR = FALSE;   //Reset the ISR flag
 180              		.loc 1 153 0
 181 00b4 464B     		ldr	r3, .L18+4
 182 00b6 0022     		movs	r2, #0
 183 00b8 1A70     		strb	r2, [r3]
 154:main.c        ****             sample_count++;     //Increment the sample counter
 184              		.loc 1 154 0
 185 00ba B7F85230 		ldrh	r3, [r7, #82]
 186 00be 0133     		adds	r3, r3, #1
 187 00c0 A7F85230 		strh	r3, [r7, #82]	@ movhi
 155:main.c        ****             sample_sum += ADC_DelSig_1_CountsTo_mVolts(ADC_DelSig_1_GetResult16());   //Add the sam
 188              		.loc 1 155 0
 189 00c4 FFF7FEFF 		bl	ADC_DelSig_1_GetResult16
 190 00c8 0346     		mov	r3, r0
 191 00ca 1846     		mov	r0, r3
 192 00cc FFF7FEFF 		bl	ADC_DelSig_1_CountsTo_mVolts
 193 00d0 0346     		mov	r3, r0
 194 00d2 1A46     		mov	r2, r3
 195 00d4 FB6C     		ldr	r3, [r7, #76]
 196 00d6 1344     		add	r3, r3, r2
 197 00d8 FB64     		str	r3, [r7, #76]
 156:main.c        ****             if(sample_count >= SAMPLE_RATE){ //Check if the sample threshhold has been reached
 198              		.loc 1 156 0
 199 00da B7F85230 		ldrh	r3, [r7, #82]
 200 00de 42F20F72 		movw	r2, #9999
 201 00e2 9342     		cmp	r3, r2
 202 00e4 33D9     		bls	.L12
 157:main.c        ****                 average_value = sample_sum / SAMPLE_RATE; //Calculate the average sampled value
 203              		.loc 1 157 0
 204 00e6 FB6C     		ldr	r3, [r7, #76]
 205 00e8 3A4A     		ldr	r2, .L18+8
 206 00ea A2FB0323 		umull	r2, r3, r2, r3
 207 00ee 5B0B     		lsrs	r3, r3, #13
 208 00f0 A7F84A30 		strh	r3, [r7, #74]	@ movhi
 158:main.c        ****                 sprintf(TransmitBuffer, "{\r\n\t\"Avg ADC Value\": \"%1u mV\",\r\n", average_value)
 209              		.loc 1 158 0
 210 00f4 B7F84A20 		ldrh	r2, [r7, #74]
ARM GAS  C:\Users\z004e6he\AppData\Local\Temp\ccf88S6o.s 			page 8


 211 00f8 3B1D     		adds	r3, r7, #4
 212 00fa 3749     		ldr	r1, .L18+12
 213 00fc 1846     		mov	r0, r3
 214 00fe FFF7FEFF 		bl	sprintf
 159:main.c        ****                 UART_1_PutString(TransmitBuffer);   //Send the output string via UART
 215              		.loc 1 159 0
 216 0102 3B1D     		adds	r3, r7, #4
 217 0104 1846     		mov	r0, r3
 218 0106 FFF7FEFF 		bl	UART_1_PutString
 160:main.c        ****                 sprintf(TransmitBuffer, "\t\"Temperature\": \"%i.%i C\"\r\n}\r\n", average_value / 
 219              		.loc 1 160 0
 220 010a B7F84A30 		ldrh	r3, [r7, #74]
 221 010e 334A     		ldr	r2, .L18+16
 222 0110 A2FB0323 		umull	r2, r3, r2, r3
 223 0114 DB08     		lsrs	r3, r3, #3
 224 0116 9BB2     		uxth	r3, r3
 225 0118 1C46     		mov	r4, r3
 226 011a B7F84A20 		ldrh	r2, [r7, #74]
 227 011e 2F4B     		ldr	r3, .L18+16
 228 0120 A3FB0213 		umull	r1, r3, r3, r2
 229 0124 D908     		lsrs	r1, r3, #3
 230 0126 0B46     		mov	r3, r1
 231 0128 9B00     		lsls	r3, r3, #2
 232 012a 0B44     		add	r3, r3, r1
 233 012c 5B00     		lsls	r3, r3, #1
 234 012e D31A     		subs	r3, r2, r3
 235 0130 9BB2     		uxth	r3, r3
 236 0132 381D     		adds	r0, r7, #4
 237 0134 2246     		mov	r2, r4
 238 0136 2A49     		ldr	r1, .L18+20
 239 0138 FFF7FEFF 		bl	sprintf
 161:main.c        ****                 UART_1_PutString(TransmitBuffer);   //Send the output string via UART
 240              		.loc 1 161 0
 241 013c 3B1D     		adds	r3, r7, #4
 242 013e 1846     		mov	r0, r3
 243 0140 FFF7FEFF 		bl	UART_1_PutString
 162:main.c        ****                 sample_count = 0;   //Reset the sample count
 244              		.loc 1 162 0
 245 0144 0023     		movs	r3, #0
 246 0146 A7F85230 		strh	r3, [r7, #82]	@ movhi
 163:main.c        ****                 sample_sum = 0;   //Reset the sample sum value
 247              		.loc 1 163 0
 248 014a 0023     		movs	r3, #0
 249 014c FB64     		str	r3, [r7, #76]
 250              	.L12:
 164:main.c        ****             }
 165:main.c        ****         }
 166:main.c        ****         
 167:main.c        ****         
 168:main.c        ****             
 169:main.c        ****         
 170:main.c        ****         /* Check to see if an ADC conversion has completed */
 171:main.c        ****         if(ADC_DelSig_1_IsEndConversion(ADC_DelSig_1_RETURN_STATUS))
 251              		.loc 1 171 0
 252 014e 0120     		movs	r0, #1
 253 0150 FFF7FEFF 		bl	ADC_DelSig_1_IsEndConversion
 254 0154 0346     		mov	r3, r0
ARM GAS  C:\Users\z004e6he\AppData\Local\Temp\ccf88S6o.s 			page 9


 255 0156 002B     		cmp	r3, #0
 256 0158 3FF473AF 		beq	.L16
 172:main.c        ****         {
 173:main.c        ****             /* Use the GetResult16 API to get an 8 bit unsigned result in
 174:main.c        ****              * single ended mode.  The API CountsTo_mVolts is then used
 175:main.c        ****              * to convert the ADC counts into mV before transmitting via
 176:main.c        ****              * the UART.  See the datasheet API description for more
 177:main.c        ****              * details */
 178:main.c        ****             Output = ADC_DelSig_1_CountsTo_mVolts(ADC_DelSig_1_GetResult16());
 257              		.loc 1 178 0
 258 015c FFF7FEFF 		bl	ADC_DelSig_1_GetResult16
 259 0160 0346     		mov	r3, r0
 260 0162 1846     		mov	r0, r3
 261 0164 FFF7FEFF 		bl	ADC_DelSig_1_CountsTo_mVolts
 262 0168 0346     		mov	r3, r0
 263 016a 7B64     		str	r3, [r7, #68]
 179:main.c        ****             
 180:main.c        ****             /* Send data based on last UART command */
 181:main.c        ****             if(SendSingleByte || ContinuouslySendData)
 264              		.loc 1 181 0
 265 016c 97F85530 		ldrb	r3, [r7, #85]	@ zero_extendqisi2
 266 0170 002B     		cmp	r3, #0
 267 0172 03D1     		bne	.L14
 268              		.loc 1 181 0 is_stmt 0 discriminator 1
 269 0174 97F85630 		ldrb	r3, [r7, #86]	@ zero_extendqisi2
 270 0178 002B     		cmp	r3, #0
 271 017a 0DD0     		beq	.L15
 272              	.L14:
 182:main.c        ****             {
 183:main.c        ****                 /* Format ADC result for transmition */
 184:main.c        ****                 sprintf(TransmitBuffer, "Sample: %lu mV\r\n", Output);
 273              		.loc 1 184 0 is_stmt 1
 274 017c 3B1D     		adds	r3, r7, #4
 275 017e 7A6C     		ldr	r2, [r7, #68]
 276 0180 1849     		ldr	r1, .L18+24
 277 0182 1846     		mov	r0, r3
 278 0184 FFF7FEFF 		bl	sprintf
 185:main.c        ****                 /* Send out the data */
 186:main.c        ****                 UART_1_PutString(TransmitBuffer);
 279              		.loc 1 186 0
 280 0188 3B1D     		adds	r3, r7, #4
 281 018a 1846     		mov	r0, r3
 282 018c FFF7FEFF 		bl	UART_1_PutString
 187:main.c        ****                 /* Reset the send once flag */
 188:main.c        ****                 SendSingleByte = FALSE;
 283              		.loc 1 188 0
 284 0190 0023     		movs	r3, #0
 285 0192 87F85530 		strb	r3, [r7, #85]
 286 0196 17E0     		b	.L13
 287              	.L15:
 189:main.c        ****             }
 190:main.c        ****             else if(SendEmulatedData)
 288              		.loc 1 190 0
 289 0198 97F85430 		ldrb	r3, [r7, #84]	@ zero_extendqisi2
 290 019c 002B     		cmp	r3, #0
 291 019e 3FF450AF 		beq	.L16
 191:main.c        ****             {
ARM GAS  C:\Users\z004e6he\AppData\Local\Temp\ccf88S6o.s 			page 10


 192:main.c        ****                 /* Format ADC result for transmition */
 193:main.c        ****                 sprintf(TransmitBuffer, "Emulated Data: %x \r\n", EmulatedData);
 292              		.loc 1 193 0
 293 01a2 97F85720 		ldrb	r2, [r7, #87]	@ zero_extendqisi2
 294 01a6 3B1D     		adds	r3, r7, #4
 295 01a8 0F49     		ldr	r1, .L18+28
 296 01aa 1846     		mov	r0, r3
 297 01ac FFF7FEFF 		bl	sprintf
 194:main.c        ****                 /* Send out the data */
 195:main.c        ****                 UART_1_PutString(TransmitBuffer);
 298              		.loc 1 195 0
 299 01b0 3B1D     		adds	r3, r7, #4
 300 01b2 1846     		mov	r0, r3
 301 01b4 FFF7FEFF 		bl	UART_1_PutString
 196:main.c        ****                 EmulatedData++;
 302              		.loc 1 196 0
 303 01b8 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 304 01bc 0133     		adds	r3, r3, #1
 305 01be 87F85730 		strb	r3, [r7, #87]
 197:main.c        ****                 /* Reset the send once flag */
 198:main.c        ****                 SendEmulatedData = FALSE;   
 306              		.loc 1 198 0
 307 01c2 0023     		movs	r3, #0
 308 01c4 87F85430 		strb	r3, [r7, #84]
 309              	.L13:
 199:main.c        ****             }
 200:main.c        ****         }
 201:main.c        ****     }
 310              		.loc 1 201 0
 311 01c8 3BE7     		b	.L16
 312              	.L19:
 313 01ca 00BF     		.align	2
 314              	.L18:
 315 01cc 00000000 		.word	.LC0
 316 01d0 00000000 		.word	gADC_ISR
 317 01d4 5917B7D1 		.word	-776530087
 318 01d8 10000000 		.word	.LC1
 319 01dc CDCCCCCC 		.word	-858993459
 320 01e0 34000000 		.word	.LC2
 321 01e4 54000000 		.word	.LC3
 322 01e8 68000000 		.word	.LC4
 323              		.cfi_endproc
 324              	.LFE64:
 325              		.size	main, .-main
 326              		.text
 327              	.Letext0:
 328              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 329              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 330              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 331              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 332              		.section	.debug_info,"",%progbits
 333              	.Ldebug_info0:
 334 0000 A2010000 		.4byte	0x1a2
 335 0004 0400     		.2byte	0x4
 336 0006 00000000 		.4byte	.Ldebug_abbrev0
 337 000a 04       		.byte	0x4
 338 000b 01       		.uleb128 0x1
ARM GAS  C:\Users\z004e6he\AppData\Local\Temp\ccf88S6o.s 			page 11


 339 000c 0D000000 		.4byte	.LASF30
 340 0010 0C       		.byte	0xc
 341 0011 14020000 		.4byte	.LASF31
 342 0015 3A010000 		.4byte	.LASF32
 343 0019 00000000 		.4byte	.Ldebug_ranges0+0
 344 001d 00000000 		.4byte	0
 345 0021 00000000 		.4byte	.Ldebug_line0
 346 0025 02       		.uleb128 0x2
 347 0026 01       		.byte	0x1
 348 0027 06       		.byte	0x6
 349 0028 50020000 		.4byte	.LASF0
 350 002c 02       		.uleb128 0x2
 351 002d 01       		.byte	0x1
 352 002e 08       		.byte	0x8
 353 002f 14010000 		.4byte	.LASF1
 354 0033 02       		.uleb128 0x2
 355 0034 02       		.byte	0x2
 356 0035 05       		.byte	0x5
 357 0036 2B020000 		.4byte	.LASF2
 358 003a 02       		.uleb128 0x2
 359 003b 02       		.byte	0x2
 360 003c 07       		.byte	0x7
 361 003d F4000000 		.4byte	.LASF3
 362 0041 03       		.uleb128 0x3
 363 0042 A9000000 		.4byte	.LASF9
 364 0046 02       		.byte	0x2
 365 0047 3F       		.byte	0x3f
 366 0048 4C000000 		.4byte	0x4c
 367 004c 02       		.uleb128 0x2
 368 004d 04       		.byte	0x4
 369 004e 05       		.byte	0x5
 370 004f 3B020000 		.4byte	.LASF4
 371 0053 02       		.uleb128 0x2
 372 0054 04       		.byte	0x4
 373 0055 07       		.byte	0x7
 374 0056 E2000000 		.4byte	.LASF5
 375 005a 02       		.uleb128 0x2
 376 005b 08       		.byte	0x8
 377 005c 05       		.byte	0x5
 378 005d 06020000 		.4byte	.LASF6
 379 0061 02       		.uleb128 0x2
 380 0062 08       		.byte	0x8
 381 0063 07       		.byte	0x7
 382 0064 C6010000 		.4byte	.LASF7
 383 0068 04       		.uleb128 0x4
 384 0069 04       		.byte	0x4
 385 006a 05       		.byte	0x5
 386 006b 696E7400 		.ascii	"int\000"
 387 006f 02       		.uleb128 0x2
 388 0070 04       		.byte	0x4
 389 0071 07       		.byte	0x7
 390 0072 B9010000 		.4byte	.LASF8
 391 0076 03       		.uleb128 0x3
 392 0077 E6010000 		.4byte	.LASF10
 393 007b 03       		.byte	0x3
 394 007c 2C       		.byte	0x2c
 395 007d 41000000 		.4byte	0x41
ARM GAS  C:\Users\z004e6he\AppData\Local\Temp\ccf88S6o.s 			page 12


 396 0081 05       		.uleb128 0x5
 397 0082 35020000 		.4byte	.LASF11
 398 0086 04       		.byte	0x4
 399 0087 E801     		.2byte	0x1e8
 400 0089 2C000000 		.4byte	0x2c
 401 008d 05       		.uleb128 0x5
 402 008e AB010000 		.4byte	.LASF12
 403 0092 04       		.byte	0x4
 404 0093 E901     		.2byte	0x1e9
 405 0095 3A000000 		.4byte	0x3a
 406 0099 05       		.uleb128 0x5
 407 009a B2010000 		.4byte	.LASF13
 408 009e 04       		.byte	0x4
 409 009f EA01     		.2byte	0x1ea
 410 00a1 53000000 		.4byte	0x53
 411 00a5 02       		.uleb128 0x2
 412 00a6 04       		.byte	0x4
 413 00a7 04       		.byte	0x4
 414 00a8 CF000000 		.4byte	.LASF14
 415 00ac 02       		.uleb128 0x2
 416 00ad 08       		.byte	0x8
 417 00ae 04       		.byte	0x4
 418 00af 33010000 		.4byte	.LASF15
 419 00b3 02       		.uleb128 0x2
 420 00b4 01       		.byte	0x1
 421 00b5 08       		.byte	0x8
 422 00b6 1B020000 		.4byte	.LASF16
 423 00ba 06       		.uleb128 0x6
 424 00bb 81000000 		.4byte	0x81
 425 00bf 02       		.uleb128 0x2
 426 00c0 08       		.byte	0x8
 427 00c1 04       		.byte	0x4
 428 00c2 44020000 		.4byte	.LASF17
 429 00c6 02       		.uleb128 0x2
 430 00c7 04       		.byte	0x4
 431 00c8 07       		.byte	0x7
 432 00c9 FD010000 		.4byte	.LASF18
 433 00cd 07       		.uleb128 0x7
 434 00ce A6010000 		.4byte	.LASF33
 435 00d2 01       		.byte	0x1
 436 00d3 54       		.byte	0x54
 437 00d4 68000000 		.4byte	0x68
 438 00d8 00000000 		.4byte	.LFB64
 439 00dc EC010000 		.4byte	.LFE64-.LFB64
 440 00e0 01       		.uleb128 0x1
 441 00e1 9C       		.byte	0x9c
 442 00e2 73010000 		.4byte	0x173
 443 00e6 08       		.uleb128 0x8
 444 00e7 B3000000 		.4byte	.LASF19
 445 00eb 01       		.byte	0x1
 446 00ec 57       		.byte	0x57
 447 00ed 99000000 		.4byte	0x99
 448 00f1 02       		.uleb128 0x2
 449 00f2 91       		.byte	0x91
 450 00f3 5C       		.sleb128 -36
 451 00f4 09       		.uleb128 0x9
 452 00f5 436800   		.ascii	"Ch\000"
ARM GAS  C:\Users\z004e6he\AppData\Local\Temp\ccf88S6o.s 			page 13


 453 00f8 01       		.byte	0x1
 454 00f9 59       		.byte	0x59
 455 00fa 81000000 		.4byte	0x81
 456 00fe 02       		.uleb128 0x2
 457 00ff 91       		.byte	0x91
 458 0100 61       		.sleb128 -31
 459 0101 08       		.uleb128 0x8
 460 0102 00000000 		.4byte	.LASF20
 461 0106 01       		.byte	0x1
 462 0107 5B       		.byte	0x5b
 463 0108 81000000 		.4byte	0x81
 464 010c 02       		.uleb128 0x2
 465 010d 91       		.byte	0x91
 466 010e 6F       		.sleb128 -17
 467 010f 08       		.uleb128 0x8
 468 0110 BA000000 		.4byte	.LASF21
 469 0114 01       		.byte	0x1
 470 0115 5D       		.byte	0x5d
 471 0116 81000000 		.4byte	0x81
 472 011a 02       		.uleb128 0x2
 473 011b 91       		.byte	0x91
 474 011c 6E       		.sleb128 -18
 475 011d 08       		.uleb128 0x8
 476 011e 5C020000 		.4byte	.LASF22
 477 0122 01       		.byte	0x1
 478 0123 5E       		.byte	0x5e
 479 0124 81000000 		.4byte	0x81
 480 0128 02       		.uleb128 0x2
 481 0129 91       		.byte	0x91
 482 012a 6D       		.sleb128 -19
 483 012b 08       		.uleb128 0x8
 484 012c 22010000 		.4byte	.LASF23
 485 0130 01       		.byte	0x1
 486 0131 5F       		.byte	0x5f
 487 0132 81000000 		.4byte	0x81
 488 0136 02       		.uleb128 0x2
 489 0137 91       		.byte	0x91
 490 0138 6C       		.sleb128 -20
 491 0139 08       		.uleb128 0x8
 492 013a EE010000 		.4byte	.LASF24
 493 013e 01       		.byte	0x1
 494 013f 61       		.byte	0x61
 495 0140 73010000 		.4byte	0x173
 496 0144 03       		.uleb128 0x3
 497 0145 91       		.byte	0x91
 498 0146 9C7F     		.sleb128 -100
 499 0148 08       		.uleb128 0x8
 500 0149 D5000000 		.4byte	.LASF25
 501 014d 01       		.byte	0x1
 502 014e 75       		.byte	0x75
 503 014f 8D000000 		.4byte	0x8d
 504 0153 02       		.uleb128 0x2
 505 0154 91       		.byte	0x91
 506 0155 6A       		.sleb128 -22
 507 0156 08       		.uleb128 0x8
 508 0157 20020000 		.4byte	.LASF26
 509 015b 01       		.byte	0x1
ARM GAS  C:\Users\z004e6he\AppData\Local\Temp\ccf88S6o.s 			page 14


 510 015c 76       		.byte	0x76
 511 015d 99000000 		.4byte	0x99
 512 0161 02       		.uleb128 0x2
 513 0162 91       		.byte	0x91
 514 0163 64       		.sleb128 -28
 515 0164 08       		.uleb128 0x8
 516 0165 9B000000 		.4byte	.LASF27
 517 0169 01       		.byte	0x1
 518 016a 77       		.byte	0x77
 519 016b 8D000000 		.4byte	0x8d
 520 016f 02       		.uleb128 0x2
 521 0170 91       		.byte	0x91
 522 0171 62       		.sleb128 -30
 523 0172 00       		.byte	0
 524 0173 0A       		.uleb128 0xa
 525 0174 B3000000 		.4byte	0xb3
 526 0178 83010000 		.4byte	0x183
 527 017c 0B       		.uleb128 0xb
 528 017d C6000000 		.4byte	0xc6
 529 0181 3F       		.byte	0x3f
 530 0182 00       		.byte	0
 531 0183 0C       		.uleb128 0xc
 532 0184 07010000 		.4byte	.LASF28
 533 0188 05       		.byte	0x5
 534 0189 1207     		.2byte	0x712
 535 018b 8F010000 		.4byte	0x18f
 536 018f 06       		.uleb128 0x6
 537 0190 76000000 		.4byte	0x76
 538 0194 0D       		.uleb128 0xd
 539 0195 DD010000 		.4byte	.LASF29
 540 0199 01       		.byte	0x1
 541 019a 3B       		.byte	0x3b
 542 019b BA000000 		.4byte	0xba
 543 019f 05       		.uleb128 0x5
 544 01a0 03       		.byte	0x3
 545 01a1 00000000 		.4byte	gADC_ISR
 546 01a5 00       		.byte	0
 547              		.section	.debug_abbrev,"",%progbits
 548              	.Ldebug_abbrev0:
 549 0000 01       		.uleb128 0x1
 550 0001 11       		.uleb128 0x11
 551 0002 01       		.byte	0x1
 552 0003 25       		.uleb128 0x25
 553 0004 0E       		.uleb128 0xe
 554 0005 13       		.uleb128 0x13
 555 0006 0B       		.uleb128 0xb
 556 0007 03       		.uleb128 0x3
 557 0008 0E       		.uleb128 0xe
 558 0009 1B       		.uleb128 0x1b
 559 000a 0E       		.uleb128 0xe
 560 000b 55       		.uleb128 0x55
 561 000c 17       		.uleb128 0x17
 562 000d 11       		.uleb128 0x11
 563 000e 01       		.uleb128 0x1
 564 000f 10       		.uleb128 0x10
 565 0010 17       		.uleb128 0x17
 566 0011 00       		.byte	0
ARM GAS  C:\Users\z004e6he\AppData\Local\Temp\ccf88S6o.s 			page 15


 567 0012 00       		.byte	0
 568 0013 02       		.uleb128 0x2
 569 0014 24       		.uleb128 0x24
 570 0015 00       		.byte	0
 571 0016 0B       		.uleb128 0xb
 572 0017 0B       		.uleb128 0xb
 573 0018 3E       		.uleb128 0x3e
 574 0019 0B       		.uleb128 0xb
 575 001a 03       		.uleb128 0x3
 576 001b 0E       		.uleb128 0xe
 577 001c 00       		.byte	0
 578 001d 00       		.byte	0
 579 001e 03       		.uleb128 0x3
 580 001f 16       		.uleb128 0x16
 581 0020 00       		.byte	0
 582 0021 03       		.uleb128 0x3
 583 0022 0E       		.uleb128 0xe
 584 0023 3A       		.uleb128 0x3a
 585 0024 0B       		.uleb128 0xb
 586 0025 3B       		.uleb128 0x3b
 587 0026 0B       		.uleb128 0xb
 588 0027 49       		.uleb128 0x49
 589 0028 13       		.uleb128 0x13
 590 0029 00       		.byte	0
 591 002a 00       		.byte	0
 592 002b 04       		.uleb128 0x4
 593 002c 24       		.uleb128 0x24
 594 002d 00       		.byte	0
 595 002e 0B       		.uleb128 0xb
 596 002f 0B       		.uleb128 0xb
 597 0030 3E       		.uleb128 0x3e
 598 0031 0B       		.uleb128 0xb
 599 0032 03       		.uleb128 0x3
 600 0033 08       		.uleb128 0x8
 601 0034 00       		.byte	0
 602 0035 00       		.byte	0
 603 0036 05       		.uleb128 0x5
 604 0037 16       		.uleb128 0x16
 605 0038 00       		.byte	0
 606 0039 03       		.uleb128 0x3
 607 003a 0E       		.uleb128 0xe
 608 003b 3A       		.uleb128 0x3a
 609 003c 0B       		.uleb128 0xb
 610 003d 3B       		.uleb128 0x3b
 611 003e 05       		.uleb128 0x5
 612 003f 49       		.uleb128 0x49
 613 0040 13       		.uleb128 0x13
 614 0041 00       		.byte	0
 615 0042 00       		.byte	0
 616 0043 06       		.uleb128 0x6
 617 0044 35       		.uleb128 0x35
 618 0045 00       		.byte	0
 619 0046 49       		.uleb128 0x49
 620 0047 13       		.uleb128 0x13
 621 0048 00       		.byte	0
 622 0049 00       		.byte	0
 623 004a 07       		.uleb128 0x7
ARM GAS  C:\Users\z004e6he\AppData\Local\Temp\ccf88S6o.s 			page 16


 624 004b 2E       		.uleb128 0x2e
 625 004c 01       		.byte	0x1
 626 004d 3F       		.uleb128 0x3f
 627 004e 19       		.uleb128 0x19
 628 004f 03       		.uleb128 0x3
 629 0050 0E       		.uleb128 0xe
 630 0051 3A       		.uleb128 0x3a
 631 0052 0B       		.uleb128 0xb
 632 0053 3B       		.uleb128 0x3b
 633 0054 0B       		.uleb128 0xb
 634 0055 49       		.uleb128 0x49
 635 0056 13       		.uleb128 0x13
 636 0057 11       		.uleb128 0x11
 637 0058 01       		.uleb128 0x1
 638 0059 12       		.uleb128 0x12
 639 005a 06       		.uleb128 0x6
 640 005b 40       		.uleb128 0x40
 641 005c 18       		.uleb128 0x18
 642 005d 9642     		.uleb128 0x2116
 643 005f 19       		.uleb128 0x19
 644 0060 01       		.uleb128 0x1
 645 0061 13       		.uleb128 0x13
 646 0062 00       		.byte	0
 647 0063 00       		.byte	0
 648 0064 08       		.uleb128 0x8
 649 0065 34       		.uleb128 0x34
 650 0066 00       		.byte	0
 651 0067 03       		.uleb128 0x3
 652 0068 0E       		.uleb128 0xe
 653 0069 3A       		.uleb128 0x3a
 654 006a 0B       		.uleb128 0xb
 655 006b 3B       		.uleb128 0x3b
 656 006c 0B       		.uleb128 0xb
 657 006d 49       		.uleb128 0x49
 658 006e 13       		.uleb128 0x13
 659 006f 02       		.uleb128 0x2
 660 0070 18       		.uleb128 0x18
 661 0071 00       		.byte	0
 662 0072 00       		.byte	0
 663 0073 09       		.uleb128 0x9
 664 0074 34       		.uleb128 0x34
 665 0075 00       		.byte	0
 666 0076 03       		.uleb128 0x3
 667 0077 08       		.uleb128 0x8
 668 0078 3A       		.uleb128 0x3a
 669 0079 0B       		.uleb128 0xb
 670 007a 3B       		.uleb128 0x3b
 671 007b 0B       		.uleb128 0xb
 672 007c 49       		.uleb128 0x49
 673 007d 13       		.uleb128 0x13
 674 007e 02       		.uleb128 0x2
 675 007f 18       		.uleb128 0x18
 676 0080 00       		.byte	0
 677 0081 00       		.byte	0
 678 0082 0A       		.uleb128 0xa
 679 0083 01       		.uleb128 0x1
 680 0084 01       		.byte	0x1
ARM GAS  C:\Users\z004e6he\AppData\Local\Temp\ccf88S6o.s 			page 17


 681 0085 49       		.uleb128 0x49
 682 0086 13       		.uleb128 0x13
 683 0087 01       		.uleb128 0x1
 684 0088 13       		.uleb128 0x13
 685 0089 00       		.byte	0
 686 008a 00       		.byte	0
 687 008b 0B       		.uleb128 0xb
 688 008c 21       		.uleb128 0x21
 689 008d 00       		.byte	0
 690 008e 49       		.uleb128 0x49
 691 008f 13       		.uleb128 0x13
 692 0090 2F       		.uleb128 0x2f
 693 0091 0B       		.uleb128 0xb
 694 0092 00       		.byte	0
 695 0093 00       		.byte	0
 696 0094 0C       		.uleb128 0xc
 697 0095 34       		.uleb128 0x34
 698 0096 00       		.byte	0
 699 0097 03       		.uleb128 0x3
 700 0098 0E       		.uleb128 0xe
 701 0099 3A       		.uleb128 0x3a
 702 009a 0B       		.uleb128 0xb
 703 009b 3B       		.uleb128 0x3b
 704 009c 05       		.uleb128 0x5
 705 009d 49       		.uleb128 0x49
 706 009e 13       		.uleb128 0x13
 707 009f 3F       		.uleb128 0x3f
 708 00a0 19       		.uleb128 0x19
 709 00a1 3C       		.uleb128 0x3c
 710 00a2 19       		.uleb128 0x19
 711 00a3 00       		.byte	0
 712 00a4 00       		.byte	0
 713 00a5 0D       		.uleb128 0xd
 714 00a6 34       		.uleb128 0x34
 715 00a7 00       		.byte	0
 716 00a8 03       		.uleb128 0x3
 717 00a9 0E       		.uleb128 0xe
 718 00aa 3A       		.uleb128 0x3a
 719 00ab 0B       		.uleb128 0xb
 720 00ac 3B       		.uleb128 0x3b
 721 00ad 0B       		.uleb128 0xb
 722 00ae 49       		.uleb128 0x49
 723 00af 13       		.uleb128 0x13
 724 00b0 3F       		.uleb128 0x3f
 725 00b1 19       		.uleb128 0x19
 726 00b2 02       		.uleb128 0x2
 727 00b3 18       		.uleb128 0x18
 728 00b4 00       		.byte	0
 729 00b5 00       		.byte	0
 730 00b6 00       		.byte	0
 731              		.section	.debug_aranges,"",%progbits
 732 0000 1C000000 		.4byte	0x1c
 733 0004 0200     		.2byte	0x2
 734 0006 00000000 		.4byte	.Ldebug_info0
 735 000a 04       		.byte	0x4
 736 000b 00       		.byte	0
 737 000c 0000     		.2byte	0
ARM GAS  C:\Users\z004e6he\AppData\Local\Temp\ccf88S6o.s 			page 18


 738 000e 0000     		.2byte	0
 739 0010 00000000 		.4byte	.LFB64
 740 0014 EC010000 		.4byte	.LFE64-.LFB64
 741 0018 00000000 		.4byte	0
 742 001c 00000000 		.4byte	0
 743              		.section	.debug_ranges,"",%progbits
 744              	.Ldebug_ranges0:
 745 0000 00000000 		.4byte	.LFB64
 746 0004 EC010000 		.4byte	.LFE64
 747 0008 00000000 		.4byte	0
 748 000c 00000000 		.4byte	0
 749              		.section	.debug_line,"",%progbits
 750              	.Ldebug_line0:
 751 0000 B6010000 		.section	.debug_str,"MS",%progbits,1
 751      02004C01 
 751      00000201 
 751      FB0E0D00 
 751      01010101 
 752              	.LASF20:
 753 0000 456D756C 		.ascii	"EmulatedData\000"
 753      61746564 
 753      44617461 
 753      00
 754              	.LASF30:
 755 000d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 755      43313120 
 755      352E342E 
 755      31203230 
 755      31363036 
 756 0040 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 756      20726576 
 756      6973696F 
 756      6E203233 
 756      37373135 
 757 0073 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 757      66756E63 
 757      74696F6E 
 757      2D736563 
 757      74696F6E 
 758              	.LASF27:
 759 009b 61766572 		.ascii	"average_value\000"
 759      6167655F 
 759      76616C75 
 759      6500
 760              	.LASF9:
 761 00a9 5F5F696E 		.ascii	"__int32_t\000"
 761      7433325F 
 761      7400
 762              	.LASF19:
 763 00b3 4F757470 		.ascii	"Output\000"
 763      757400
 764              	.LASF21:
 765 00ba 436F6E74 		.ascii	"ContinuouslySendData\000"
 765      696E756F 
 765      75736C79 
 765      53656E64 
 765      44617461 
ARM GAS  C:\Users\z004e6he\AppData\Local\Temp\ccf88S6o.s 			page 19


 766              	.LASF14:
 767 00cf 666C6F61 		.ascii	"float\000"
 767      7400
 768              	.LASF25:
 769 00d5 73616D70 		.ascii	"sample_count\000"
 769      6C655F63 
 769      6F756E74 
 769      00
 770              	.LASF5:
 771 00e2 6C6F6E67 		.ascii	"long unsigned int\000"
 771      20756E73 
 771      69676E65 
 771      6420696E 
 771      7400
 772              	.LASF3:
 773 00f4 73686F72 		.ascii	"short unsigned int\000"
 773      7420756E 
 773      7369676E 
 773      65642069 
 773      6E7400
 774              	.LASF28:
 775 0107 49544D5F 		.ascii	"ITM_RxBuffer\000"
 775      52784275 
 775      66666572 
 775      00
 776              	.LASF1:
 777 0114 756E7369 		.ascii	"unsigned char\000"
 777      676E6564 
 777      20636861 
 777      7200
 778              	.LASF23:
 779 0122 53656E64 		.ascii	"SendEmulatedData\000"
 779      456D756C 
 779      61746564 
 779      44617461 
 779      00
 780              	.LASF15:
 781 0133 646F7562 		.ascii	"double\000"
 781      6C6500
 782              	.LASF32:
 783 013a 433A5C55 		.ascii	"C:\\UserData\\z004e6he\\OneDrive - Siemens AG\\Docu"
 783      73657244 
 783      6174615C 
 783      7A303034 
 783      65366865 
 784 0169 6D656E74 		.ascii	"ments\\PSoC Creator\\PSoC\\Exercise3\\LucaSpenglerP"
 784      735C5053 
 784      6F432043 
 784      72656174 
 784      6F725C50 
 785 0198 536F4335 		.ascii	"SoC5DAQ.cydsn\000"
 785      4441512E 
 785      63796473 
 785      6E00
 786              	.LASF33:
 787 01a6 6D61696E 		.ascii	"main\000"
 787      00
ARM GAS  C:\Users\z004e6he\AppData\Local\Temp\ccf88S6o.s 			page 20


 788              	.LASF12:
 789 01ab 75696E74 		.ascii	"uint16\000"
 789      313600
 790              	.LASF13:
 791 01b2 75696E74 		.ascii	"uint32\000"
 791      333200
 792              	.LASF8:
 793 01b9 756E7369 		.ascii	"unsigned int\000"
 793      676E6564 
 793      20696E74 
 793      00
 794              	.LASF7:
 795 01c6 6C6F6E67 		.ascii	"long long unsigned int\000"
 795      206C6F6E 
 795      6720756E 
 795      7369676E 
 795      65642069 
 796              	.LASF29:
 797 01dd 67414443 		.ascii	"gADC_ISR\000"
 797      5F495352 
 797      00
 798              	.LASF10:
 799 01e6 696E7433 		.ascii	"int32_t\000"
 799      325F7400 
 800              	.LASF24:
 801 01ee 5472616E 		.ascii	"TransmitBuffer\000"
 801      736D6974 
 801      42756666 
 801      657200
 802              	.LASF18:
 803 01fd 73697A65 		.ascii	"sizetype\000"
 803      74797065 
 803      00
 804              	.LASF6:
 805 0206 6C6F6E67 		.ascii	"long long int\000"
 805      206C6F6E 
 805      6720696E 
 805      7400
 806              	.LASF31:
 807 0214 6D61696E 		.ascii	"main.c\000"
 807      2E6300
 808              	.LASF16:
 809 021b 63686172 		.ascii	"char\000"
 809      00
 810              	.LASF26:
 811 0220 73616D70 		.ascii	"sample_sum\000"
 811      6C655F73 
 811      756D00
 812              	.LASF2:
 813 022b 73686F72 		.ascii	"short int\000"
 813      7420696E 
 813      7400
 814              	.LASF11:
 815 0235 75696E74 		.ascii	"uint8\000"
 815      3800
 816              	.LASF4:
 817 023b 6C6F6E67 		.ascii	"long int\000"
ARM GAS  C:\Users\z004e6he\AppData\Local\Temp\ccf88S6o.s 			page 21


 817      20696E74 
 817      00
 818              	.LASF17:
 819 0244 6C6F6E67 		.ascii	"long double\000"
 819      20646F75 
 819      626C6500 
 820              	.LASF0:
 821 0250 7369676E 		.ascii	"signed char\000"
 821      65642063 
 821      68617200 
 822              	.LASF22:
 823 025c 53656E64 		.ascii	"SendSingleByte\000"
 823      53696E67 
 823      6C654279 
 823      746500
 824              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
